using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using System.Text;

public partial class Masters_RawMaterial_FrmWeavingStockAdjustCI : System.Web.UI.Page
{
    static int MasterCompanyId;
    static string TempLotNo = "";
    static string TempSelectedGodownId = "0";
    protected void Page_Load(object sender, EventArgs e)
    {
        MasterCompanyId = Convert.ToInt16(Session["varMasterCompanyIDForERP"]);
        if (Session["varMasterCompanyIDForERP"] == null)
        {
            Response.Redirect("~/Login.aspx");
        }
        DataSet DSQ = null; string Qry = "";
        if (!IsPostBack)
        {
            ViewState["Prmid"] = 0;
            Qry = @" select Distinct CI.CompanyId,Companyname from Companyinfo CI,Company_Authentication CA Where CA.CompanyId=CI.CompanyId And CA.UserId=" + Session["varuserId"] + " And CI.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @" Order By Companyname
                     select PNM.PROCESS_NAME_ID,PNM.PROCESS_NAME From PROCESS_NAME_MASTER PNM inner join UserRightsProcess URP on PNM.PROCESS_NAME_ID=URP.ProcessId and URP.Userid=" + Session["varuserid"] + @"
                     WHere PNM.ProcessType=1 and PNM.Process_Name='WEAVING'  order by PROCESS_NAME
                     Select VarProdCode,VarCompanyNo From MasterSetting 
                     Select ID, BranchName 
                        From BRANCHMASTER BM(nolock) 
                        JOIN BranchUser BU(nolock) ON BU.BranchID = BM.ID And BU.UserID = " + Session["varuserId"] + @" 
                        Where BM.CompanyID = " + Session["CurrentWorkingCompanyID"] + " And BM.MasterCompanyID = " + Session["varMasterCompanyIDForERP"] + @"
                    Select ConeType, ConeType From ConeMaster Order By SrNo ";

            DSQ = SqlHelper.ExecuteDataset(Qry);
            UtilityModule.ConditionalComboFillWithDS(ref ddCompName, DSQ, 0, true, "--Select--");
            if (ddCompName.Items.Count > 0)
            {
                ddCompName.SelectedValue = Session["CurrentWorkingCompanyID"].ToString();
                ddCompName.Enabled = false;
            }

            UtilityModule.ConditionalComboFillWithDS(ref DDBranchName, DSQ, 3, false, "");
            DDBranchName.Enabled = false;
            if (DDBranchName.Items.Count == 0)
            {
                ScriptManager.RegisterStartupScript(Page, GetType(), "opn1", "alert('Branch not define for this user!');", true);
                return;
            }

            UtilityModule.ConditionalComboFillWithDS(ref ddProcessName, DSQ, 1, true, "--Select--");
            //UtilityModule.ConditionalComboFillWithDS(ref DDconetype, DSQ, 4, false, "");

            int VarProdCode = Convert.ToInt32(DSQ.Tables[2].Rows[0]["VarProdCode"]);
            int VarCompanyId = Convert.ToInt32(DSQ.Tables[2].Rows[0]["VarCompanyNo"]);
            txtdate.Text = DateTime.Now.ToString("dd-MMM-yyyy");
            //ddCompName.SelectedIndex = 1;
            switch (VarProdCode)
            {
                case 0:
                    procode.Visible = false;
                    break;
                case 1:
                    procode.Visible = true;
                    break;
            }
            lablechange();
            ////Fill_Temp_OrderNo();
            //switch (Session["varMasterCompanyIDForERP"].ToString())
            //{
            //    case "5":
            //    case "9":
            //        txtchalanno.ReadOnly = true;
            //        TDTanaBana.Visible = true;
            //        TDTransportName.Visible = true;
            //        TDBiltyNo.Visible = true;
            //        TDVehicleNo.Visible = true;
            //        TDEstimatedRate.Visible = true;
            //        ChkWayChallanFormat.Visible = true;
            //        ChkWayChallanFormatBack.Visible = true;
            //        TDCGSTSGST.Visible = true;
            //        break;
            //    case "16":
            //        txtchalanno.Enabled = false;
            //        //BtnPanipatPNM2.Visible = true;
            //        break;
            //    case "41":                    
            //        TDVehicleNo.Visible = true;
            //        TDEstimatedRate.Visible = true;
            //        TDEWayBillNo.Visible = true;
            //        break;
            //    case "43":
            //        Label15.Text = "UCN No";
            //        TDVehicleNo.Visible = true;
            //        break;
            //}
            ////*************
            ////if (variable.Carpetcompany == "1")
            /////{
            ////    TRempcodescan.Visible = true;
           // //}
           
            if (variable.VarCompanyWiseChallanNoGenerated == "1")
            {
                txtchalanno.Enabled = false;
            }
        }
    }
    public void lablechange()
    {
        String[] ParameterList = new String[8];
        ParameterList = UtilityModule.ParameteLabel(Convert.ToInt32(Session["varMasterCompanyIDForERP"]));
        lblqualityname.Text = ParameterList[0];
        lbldesignname.Text = ParameterList[1];
        lblcolorname.Text = ParameterList[2];
        lblshapename.Text = ParameterList[3];
        LblSize.Text = ParameterList[4];
        lblcategoryname.Text = ParameterList[5];
        lblitemname.Text = ParameterList[6];
        lblshadecolor.Text = ParameterList[7];
    }
    protected void ddProcessName_SelectedIndexChanged(object sender, EventArgs e)
    {
        ProcessNameSelectedIndexChange();
    }
    private void ProcessNameSelectedIndexChange()
    {
        ViewState["Prmid"] = 0;
        //Fill_Grid();
        string str = "";
        if (variable.VarFinishingNewModuleWise == "1" && ddProcessName.SelectedValue != "1")
        {
            str = @"select EI.EmpId,EI.EmpName+' '+case when isnull(EI.empcode,'')='' Then '' ELse '['+ EI.empcode+']' End 
                    From Empinfo EI 
                    join EmpProcess EMP on EI.EmpId=EMP.EmpId Where EMP.Processid=" + ddProcessName.SelectedValue;
        }
        else
        {
            str = @"SELECT distinct e.EmpId, e.EmpName  
                        FROM  PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + @" PIM 
                                            JOIN  EmpInfo e ON pim.Empid = e.EmpId And e.MasterCompanyId = " + Session["varMasterCompanyIDForERP"] + @" 
                        UNION 
                        Select EI.EmpId, EI.EmpName 
                        From PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + @" PIM(Nolock) 
                        JOIN Employee_ProcessOrderNo EPO(Nolock) ON EPO.IssueOrderId = PIM.IssueOrderId And ProcessID = " + ddProcessName.SelectedValue + @" 
                        JOIN EmpInfo EI(Nolock) ON EI.EmpID = EPO.Empid ";
            //if (Session["varMasterCompanyIDForERP"].ToString() == "28")
            //{
            //    str = str + " Where PIM.FlagStockNoAttachWithoutRawMaterialIssue = 0";
            //}

            if (Session["varMasterCompanyIDForERP"].ToString() == "43")
            {
                str = str + " Where PIM.FlagStockNoAttachWithoutRawMaterialIssue = 0";
            }
            else if (Session["varMasterCompanyIDForERP"].ToString() == "45")
            {
                str = str + " Where PIM.FlagStockNoAttachWithoutRawMaterialIssue = 0";
            }
            else
            {
                str = str + " Where PIM.FlagStockNoAttachWithoutRawMaterialIssue = 1";
            }
            str = str + " Order By EmpName";
        }
        UtilityModule.ConditionalComboFill(ref ddempname, str, true, "--Select--");
    }
    
    protected void ddempname_SelectedIndexChanged(object sender, EventArgs e)
    {
        ViewState["Prmid"] = 0;
        txtchalanno.Text = "";
        BindCarpetQuality();
        //EmpNameSelectedIndexChange();

        if (ChKForEdit.Checked == true)
        {
            ChKForEdit_CheckedChanged(sender,new EventArgs());
        }
    }
    private void BindCarpetQuality()
    {
        ViewState["Prmid"] = 0;
        string str = "";
        str = @"select Distinct VF.Qualityid, VF.Qualityname 
                From PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + @" PIM(NoLock) JOIN  PROCESS_ISSUE_Detail_" + ddProcessName.SelectedValue + @" PID(NoLock) ON PIM.IssueOrderId=PID.IssueOrderId
                JOIN V_FinishedItemDetail VF ON PID.Item_Finished_Id=VF.Item_Finished_Id
                join EmpInfo ei on PIM.Empid=ei.EmpId 
                WHERE --IsNull(PIM.DEPARTMENTTYPE, 0) = 0 And 
                PIM.Companyid=" + ddCompName.SelectedValue + " and PIM.Empid=" + ddempname.SelectedValue + " and isnull(pim.FOLIOSTATUS,0)=0 and isnull(PIM.samplenumber,'')='' and PIM.Status='Pending'";

        //if (ChkForCompleteStatus.Checked == true)
        //{
        //    str = str + @" And PIM.Status = 'Complete'";
        //}
        //else
        //{
        //    str = str + @" And PIM.Status <> 'Complete'";
        //}
        str = str + " UNION  ";
        str = str + @" select Distinct VF.Qualityid, VF.Qualityname 
            From Process_issue_Master_" + ddProcessName.SelectedValue + @" PIM(NoLock) JOIN  PROCESS_ISSUE_Detail_" + ddProcessName.SelectedValue + @" PID(NoLock) ON PIM.IssueOrderId=PID.IssueOrderId 
            JOIN V_FinishedItemDetail VF ON PID.Item_Finished_Id=VF.Item_Finished_Id
            join employee_processorderno emp on pim.issueorderid=emp.issueorderid and emp.ProcessId=" + ddProcessName.SelectedValue + @" And pim.Empid=0 
            Where --IsNull(PIM.DEPARTMENTTYPE, 0) = 0 And 
            PIm.Companyid=" + ddCompName.SelectedValue + " and EMP.Empid=" + ddempname.SelectedValue + " and isnull(pim.FOLIOSTATUS,0)=0 and isnull(PIM.samplenumber,'')='' and PIM.Status='Pending'";

        //if (ChkForCompleteStatus.Checked == true)
        //{
        //    str = str + @" And PIM.Status = 'Complete'";
        //}
        //else
        //{
        //    str = str + @" And PIM.Status <> 'Complete'";
        //}
        UtilityModule.ConditionalComboFill(ref DDCarpetQuality, str, true, "---Select Series---");
    }
    private void BindRawMaterialCategory()
    {
        string str = "";
        str =str+ "0|0|0|0|0|0|0|0~";
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        if (con.State == ConnectionState.Closed)
        {
            con.Open();
        }

        SqlCommand cmd = new SqlCommand("PRO_BindRawMaterialItemParameterDropDown", con);
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.CommandTimeout = 3000;

        cmd.Parameters.AddWithValue("@CompanyId", ddCompName.SelectedValue);
        cmd.Parameters.AddWithValue("@EMPID", ddempname.SelectedValue);
        cmd.Parameters.AddWithValue("@ProcessId", ddProcessName.SelectedValue);
        cmd.Parameters.AddWithValue("@CarpetQualityId", DDCarpetQuality.SelectedValue);
        cmd.Parameters.AddWithValue("@ChkForCompleteStatus", 0);
        cmd.Parameters.AddWithValue("@Mastercompanyid", Session["VarCompanyNo"]);
        cmd.Parameters.AddWithValue("@UserId", Session["VarUserId"]);
        cmd.Parameters.AddWithValue("@Type", 0);
        cmd.Parameters.AddWithValue("@ParameterValue", str);       
       

        //cmd.Parameters.AddWithValue("@CategoryId", ddCatagory.SelectedIndex>0 ? ddCatagory.SelectedValue :"0");
        //cmd.Parameters.AddWithValue("@ItemId", dditemname.SelectedIndex > 0 ? dditemname.SelectedValue : "0");
        //cmd.Parameters.AddWithValue("@QualityId", dquality.SelectedIndex > 0 ? dquality.SelectedValue : "0");

        DataSet ds = new DataSet();
        SqlDataAdapter ad = new SqlDataAdapter(cmd);
        cmd.ExecuteNonQuery();
        ad.Fill(ds);
        //*************

        con.Close();
        con.Dispose();

        UtilityModule.ConditionalComboFillWithDS(ref ddCatagory, ds, 0, true, "--Plz Select--");
    }

    protected void DDCarpetQuality_SelectedIndexChanged(object sender, EventArgs e)
    {
        txtchalanno.Text = "";
        BindRawMaterialCategory();
        //EmpNameSelectedIndexChange();
    }

    protected void ChKForEdit_CheckedChanged(object sender, EventArgs e)
    {
        //EditCheckedChanged();

        //if (Session["usertype"].ToString() != "1" && variable.VarOnlyPreviewButtonShowOnAllEditForm == "1")
        //{
        //    btnsave.Visible = false;
        //    BtnUpdateRemark.Visible = false;
        //    gvdetail.Columns[8].Visible = false;
        //}
    }
    private void EditCheckedChanged()
    {
        if (ChKForEdit.Checked == true)
        {
            //if (Session["varMasterCompanyIDForERP"].ToString() == "16" || Session["varMasterCompanyIDForERP"].ToString() == "28" || Session["varMasterCompanyIDForERP"].ToString() == "31")
            //{
            //    TDForCompleteStatus.Visible = true;
            //}
            Td7.Visible = true;
            
            string str = "";
            str = @"Select PRM.ChalanNo, PRM.ChalanNo as ChallanNo 
                    from ProcessRawMaster PRM
                    Where PRM.TypeFlag = 0 And PRM.TranType=0 And PRM.EmpId=" + ddempname.SelectedValue + " And PRM.CompanyID = " + ddCompName.SelectedValue + @" And 
                    PRM.BranchID = " + DDBranchName.SelectedValue + @" And MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @" 
                    Group by ChalanNo 
                    order by cast(RIGHT(PRM.ChalanNo,charindex('/',reverse(PRM.ChalanNo),1)-1) as int) desc";

            UtilityModule.ConditionalComboFill(ref DDChallanNo, str, true, "Select Challan No");


        }
        else
        {
            //TDForCompleteStatus.Visible = false;
            Td7.Visible = false;
        }
    }
    protected void DDChallanNo_SelectedIndexChanged(object sender, EventArgs e)
    {
        ChallanNoSelectedIndexChange();
    }
    private void ChallanNoSelectedIndexChange()
    {
        ViewState["Prmid"] = 0;
        txtchalanno.Text = "";
        if (DDChallanNo.SelectedIndex > 0)
        {
            //ViewState["Prmid"] = DDChallanNo.SelectedValue;
            //string strsql2 = "select PRMID,ChalanNo from ProcessRawMaster PRM where PRM.TypeFlag = 0 And PRM.Prmid=" + DDChallanNo.SelectedValue + " And PRM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];  
                     
            string strsql2 = "select PRMID,ChalanNo from ProcessRawMaster PRM where PRM.TypeFlag = 0 And PRM.ChalanNo='" + DDChallanNo.SelectedItem.Text + "' And PRM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];
                     
            DataSet ds2 = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql2);

            if (ds2.Tables[0].Rows.Count > 0)
            {
                txtchalanno.Text = ds2.Tables[0].Rows[0]["ChalanNo"].ToString();
                ViewState["Prmid"] = ds2.Tables[0].Rows[0]["PRMID"].ToString();
            }

            ////if (DDChallanNo.SelectedItem.Text.Split('/').Length > 1)
            ////{
            ////    txtchalanno.Text = DDChallanNo.SelectedItem.Text.Split('/')[1];
            ////}
            ////else
            ////{
            ////    txtchalanno.Text = DDChallanNo.SelectedItem.Text;
            ////}           
            
            //string strsql = "select TransportName,BiltyNo,VehicleNo,Remark,isnull(EWayBillNo,'') as EWayBillNo from ProcessRawMaster PRM where PRM.TypeFlag = 0 And PRM.Prmid=" + DDChallanNo.SelectedValue + " And PRM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];                       

            //string strsql = "select TransportName,BiltyNo,VehicleNo,Remark,isnull(EWayBillNo,'') as EWayBillNo from ProcessRawMaster PRM where PRM.TypeFlag = 0 And PRM.ChalanNo='" + DDChallanNo.SelectedItem.Text + "' And PRM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];
            //DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql);

            //if (ds.Tables[0].Rows.Count > 0)
            //{
            //    txtTransportName.Text = ds.Tables[0].Rows[0]["TransportName"].ToString();
            //    txtBiltyNo.Text = ds.Tables[0].Rows[0]["BiltyNo"].ToString();
            //    txtVehicleNo.Text = ds.Tables[0].Rows[0]["VehicleNo"].ToString();
            //    txtremark.Text = ds.Tables[0].Rows[0]["Remark"].ToString();
            //    txtEWayBillNo.Text = ds.Tables[0].Rows[0]["EWayBillNo"].ToString();
            //}



        }
        //Fill_Grid();
    }

    private void BindRawMaterialItem()
    {  
        string str = "";
        str = str + ddCatagory.SelectedValue+ "|0|0|0|0|0|0|0~";
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        if (con.State == ConnectionState.Closed)
        {
            con.Open();
        }

        SqlCommand cmd = new SqlCommand("PRO_BindRawMaterialItemParameterDropDown", con);
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.CommandTimeout = 3000;

        cmd.Parameters.AddWithValue("@CompanyId", ddCompName.SelectedValue);
        cmd.Parameters.AddWithValue("@EMPID", ddempname.SelectedValue);
        cmd.Parameters.AddWithValue("@ProcessId", ddProcessName.SelectedValue);
        cmd.Parameters.AddWithValue("@CarpetQualityId", DDCarpetQuality.SelectedValue);
        cmd.Parameters.AddWithValue("@ChkForCompleteStatus", 0);
        cmd.Parameters.AddWithValue("@Mastercompanyid", Session["VarCompanyNo"]);
        cmd.Parameters.AddWithValue("@UserId", Session["VarUserId"]);
        cmd.Parameters.AddWithValue("@Type", 1);
        cmd.Parameters.AddWithValue("@ParameterValue", str);    

        DataSet ds = new DataSet();
        SqlDataAdapter ad = new SqlDataAdapter(cmd);
        cmd.ExecuteNonQuery();
        ad.Fill(ds);
        //*************

        con.Close();
        con.Dispose();

        UtilityModule.ConditionalComboFillWithDS(ref dditemname, ds, 0, true, "--Plz Select--");
    }
    protected void ddCatagory_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddCatagory.SelectedIndex >= 0)
        {
            ddlcategorycange();
            BindRawMaterialItem();
        }
        
        //Fill_Category_SelectedChange();
    }
    private void BindRawMaterialDesign()
    {
        string str = "";
        str = str +" 0|0|0|0|0|0|0|0~";
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        if (con.State == ConnectionState.Closed)
        {
            con.Open();
        }

        SqlCommand cmd = new SqlCommand("PRO_BindRawMaterialItemParameterDropDown", con);
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.CommandTimeout = 3000;

        cmd.Parameters.AddWithValue("@CompanyId", ddCompName.SelectedValue);
        cmd.Parameters.AddWithValue("@EMPID", ddempname.SelectedValue);
        cmd.Parameters.AddWithValue("@ProcessId", ddProcessName.SelectedValue);
        cmd.Parameters.AddWithValue("@CarpetQualityId", DDCarpetQuality.SelectedValue);
        cmd.Parameters.AddWithValue("@ChkForCompleteStatus", 0);
        cmd.Parameters.AddWithValue("@Mastercompanyid", Session["VarCompanyNo"]);
        cmd.Parameters.AddWithValue("@UserId", Session["VarUserId"]);
        cmd.Parameters.AddWithValue("@Type", 3);
        cmd.Parameters.AddWithValue("@ParameterValue", str);
      
        DataSet ds = new DataSet();
        SqlDataAdapter ad = new SqlDataAdapter(cmd);
        cmd.ExecuteNonQuery();
        ad.Fill(ds);
        //*************

        con.Close();
        con.Dispose();

        UtilityModule.ConditionalComboFillWithDS(ref dddesign, ds, 0, true, "--Plz Select--");
    }
    private void BindRawMaterialColor()
    {
        string str = "";
        str = str + " 0|0|0|0|0|0|0|0~";
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        if (con.State == ConnectionState.Closed)
        {
            con.Open();
        }

        SqlCommand cmd = new SqlCommand("PRO_BindRawMaterialItemParameterDropDown", con);
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.CommandTimeout = 3000;

        cmd.Parameters.AddWithValue("@CompanyId", ddCompName.SelectedValue);
        cmd.Parameters.AddWithValue("@EMPID", ddempname.SelectedValue);
        cmd.Parameters.AddWithValue("@ProcessId", ddProcessName.SelectedValue);
        cmd.Parameters.AddWithValue("@CarpetQualityId", DDCarpetQuality.SelectedValue);
        cmd.Parameters.AddWithValue("@ChkForCompleteStatus", 0);
        cmd.Parameters.AddWithValue("@Mastercompanyid", Session["VarCompanyNo"]);
        cmd.Parameters.AddWithValue("@UserId", Session["VarUserId"]);
        cmd.Parameters.AddWithValue("@Type", 4);
        cmd.Parameters.AddWithValue("@ParameterValue", str);     

        DataSet ds = new DataSet();
        SqlDataAdapter ad = new SqlDataAdapter(cmd);
        cmd.ExecuteNonQuery();
        ad.Fill(ds);
        //*************

        con.Close();
        con.Dispose();

        UtilityModule.ConditionalComboFillWithDS(ref ddcolor, ds, 0, true, "--Plz Select--");
    }
    private void BindRawMaterialShape()
    {
        string str = "";
        str = str + " 0|0|0|0|0|0|0|0~";
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        if (con.State == ConnectionState.Closed)
        {
            con.Open();
        }

        SqlCommand cmd = new SqlCommand("PRO_BindRawMaterialItemParameterDropDown", con);
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.CommandTimeout = 3000;

        cmd.Parameters.AddWithValue("@CompanyId", ddCompName.SelectedValue);
        cmd.Parameters.AddWithValue("@EMPID", ddempname.SelectedValue);
        cmd.Parameters.AddWithValue("@ProcessId", ddProcessName.SelectedValue);
        cmd.Parameters.AddWithValue("@CarpetQualityId", DDCarpetQuality.SelectedValue);
        cmd.Parameters.AddWithValue("@ChkForCompleteStatus", 0);
        cmd.Parameters.AddWithValue("@Mastercompanyid", Session["VarCompanyNo"]);
        cmd.Parameters.AddWithValue("@UserId", Session["VarUserId"]);
        cmd.Parameters.AddWithValue("@Type", 5);
        cmd.Parameters.AddWithValue("@ParameterValue", str);  

        DataSet ds = new DataSet();
        SqlDataAdapter ad = new SqlDataAdapter(cmd);
        cmd.ExecuteNonQuery();
        ad.Fill(ds);
        //*************

        con.Close();
        con.Dispose();

        UtilityModule.ConditionalComboFillWithDS(ref ddshape, ds, 0, true, "--Plz Select--");
    }
    private void BindRawMaterialSize()
    {
        string str = "";
        str = str + " 0|0|0|0|0|0|0|0~";
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        if (con.State == ConnectionState.Closed)
        {
            con.Open();
        }

        SqlCommand cmd = new SqlCommand("PRO_BindRawMaterialItemParameterDropDown", con);
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.CommandTimeout = 3000;

        cmd.Parameters.AddWithValue("@CompanyId", ddCompName.SelectedValue);
        cmd.Parameters.AddWithValue("@EMPID", ddempname.SelectedValue);
        cmd.Parameters.AddWithValue("@ProcessId", ddProcessName.SelectedValue);
        cmd.Parameters.AddWithValue("@CarpetQualityId", DDCarpetQuality.SelectedValue);
        cmd.Parameters.AddWithValue("@ChkForCompleteStatus", 0);
        cmd.Parameters.AddWithValue("@Mastercompanyid", Session["VarCompanyNo"]);
        cmd.Parameters.AddWithValue("@UserId", Session["VarUserId"]);
        cmd.Parameters.AddWithValue("@Type", 6);
        cmd.Parameters.AddWithValue("@ParameterValue", str);       

        DataSet ds = new DataSet();
        SqlDataAdapter ad = new SqlDataAdapter(cmd);
        cmd.ExecuteNonQuery();
        ad.Fill(ds);
        //*************

        con.Close();
        con.Dispose();

        UtilityModule.ConditionalComboFillWithDS(ref ddsize, ds, 0, true, "--Plz Select--");
    }
    private void ddlcategorycange()
    {
        ql.Visible = false;
        clr.Visible = false;
        dsn.Visible = false;
        shp.Visible = false;
        sz.Visible = false;
        shd.Visible = false;
        string strsql = "SELECT [CATEGORY_PARAMETERS_ID],[CATEGORY_ID],IPM.[PARAMETER_ID],PARAMETER_NAME " +
                      " FROM [ITEM_CATEGORY_PARAMETERS] IPM inner join PARAMETER_MASTER PM on " +
                      " IPM.[PARAMETER_ID]=PM.[PARAMETER_ID] where [CATEGORY_ID]=" + ddCatagory.SelectedValue + " And PM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];
        DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql);
        if (ds.Tables[0].Rows.Count > 0)
        {
            foreach (DataRow dr in ds.Tables[0].Rows)
            {
                switch (dr["PARAMETER_ID"].ToString())
                {
                    case "1":
                        ql.Visible = true;
                        break;
                    case "3":
                        clr.Visible = true;
                        if (hnissampleorder.Value == "1")
                        {
                            UtilityModule.ConditionalComboFill(ref ddcolor, "select Colorid,Colorname From Color Where MasterCompanyId=" + ddcolor.SelectedValue + " order by ColorName", true, "--Select Color--");
                        }
                        else
                        {
                            BindRawMaterialColor();
//                            UtilityModule.ConditionalComboFill(ref ddcolor, @"SELECT DISTINCT dbo.color.ColorId, dbo.color.ColorName FROm dbo.ITEM_PARAMETER_MASTER INNER JOIN
//                        PROCESS_CONSUMPTION_DETAIL ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = PROCESS_CONSUMPTION_DETAIL.IFinishedId INNER JOIN
//                        dbo.color ON dbo.ITEM_PARAMETER_MASTER.COLOR_ID = dbo.color.ColorId
//                        where PROCESS_CONSUMPTION_DETAIL.issueorderid=" + ddOrderNo.SelectedValue + " And ITEM_PARAMETER_MASTER.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + "", true, "--Select Color--");
                        }
                        break;
                    case "2":
                        dsn.Visible = true;
                        if (hnissampleorder.Value == "1")
                        {
                            UtilityModule.ConditionalComboFill(ref dddesign, "select designId,designName From design  Where MasterCompanyid=" + Session["varMasterCompanyIDForERP"] + " order by designName", true, "--Select Design--");
                        }
                        else
                        {
                            BindRawMaterialDesign();
//                            UtilityModule.ConditionalComboFill(ref dddesign, @"SELECT DISTINCT dbo.Design.designId, dbo.Design.designName  FROM dbo.ITEM_PARAMETER_MASTER INNER JOIN
//                        PROCESS_CONSUMPTION_DETAIL ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = PROCESS_CONSUMPTION_DETAIL.IFinishedId INNER JOIN
//                        dbo.Design ON dbo.ITEM_PARAMETER_MASTER.DESIGN_ID = dbo.Design.designId
//                        where PROCESS_CONSUMPTION_DETAIL.issueorderid=" + ddOrderNo.SelectedValue + " And ITEM_PARAMETER_MASTER.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + "", true, "--Select Design--");
                        }
                        break;
                    case "4":
                        shp.Visible = true;
                        if (hnissampleorder.Value == "1")
                        {
                            UtilityModule.ConditionalComboFill(ref ddshape, "select Shapeid,ShapeName From Shape Where MasterCompanyid=" + ddshape.SelectedValue + " order by ShapeId", true, "--Select Shape--");
                        }
                        else
                        {
                            BindRawMaterialShape();
//                            UtilityModule.ConditionalComboFill(ref ddshape, @"SELECT DISTINCT dbo.Shape.ShapeId, dbo.Shape.ShapeName  FROM dbo.ITEM_PARAMETER_MASTER INNER JOIN
//                        PROCESS_CONSUMPTION_DETAIL ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = PROCESS_CONSUMPTION_DETAIL.IFinishedId INNER JOIN
//                        dbo.Shape ON dbo.ITEM_PARAMETER_MASTER.SHAPE_ID = dbo.Shape.ShapeId
//                        where PROCESS_CONSUMPTION_DETAIL.issueorderid=" + ddOrderNo.SelectedValue + " And ITEM_PARAMETER_MASTER.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + "", true, "--Select Shape--");
                        }
                        if (ddshape.Items.Count > 0)
                        {
                            ddshape.SelectedIndex = 1;
                        }
                        break;
                    case "5":
                        sz.Visible = true;
                        ChkForMtr.Checked = false;
                        if (hnissampleorder.Value == "1")
                        {
                            UtilityModule.ConditionalComboFill(ref ddsize, "select SizeId,SizeFt From Size WHere shapeid=" + ddshape.SelectedValue + "  and MasterCompanyid=" + Session["varMasterCompanyIDForERP"] + " ", true, "Size in Ft");
                        }
                        else
                        {
                            BindRawMaterialSize();
//                            UtilityModule.ConditionalComboFill(ref ddsize, @"SELECT DISTINCT dbo.Size.SizeId, dbo.Size.SizeFt FROM dbo.ITEM_PARAMETER_MASTER INNER JOIN
//                        PROCESS_CONSUMPTION_DETAIL ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = PROCESS_CONSUMPTION_DETAIL.IFinishedId INNER JOIN
//                        dbo.Size ON dbo.ITEM_PARAMETER_MASTER.SIZE_ID = dbo.Size.SizeId
//                        where PROCESS_CONSUMPTION_DETAIL.issueorderid=" + ddOrderNo.SelectedValue + " And ITEM_PARAMETER_MASTER.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + "", true, "Size in Ft");
                        }
                        break;
                    case "6":
                        shd.Visible = true;
                        break;
                }
            }
        }
    }
    private void BindRawMaterialQuality()
    {
        string str = "";
        str = str + ddCatagory.SelectedValue + "|"+dditemname.SelectedValue+ "|0|0|0|0|0|0~";
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        if (con.State == ConnectionState.Closed)
        {
            con.Open();
        }

        SqlCommand cmd = new SqlCommand("PRO_BindRawMaterialItemParameterDropDown", con);
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.CommandTimeout = 3000;

        cmd.Parameters.AddWithValue("@CompanyId", ddCompName.SelectedValue);
        cmd.Parameters.AddWithValue("@EMPID", ddempname.SelectedValue);
        cmd.Parameters.AddWithValue("@ProcessId", ddProcessName.SelectedValue);
        cmd.Parameters.AddWithValue("@CarpetQualityId", DDCarpetQuality.SelectedValue);
        cmd.Parameters.AddWithValue("@ChkForCompleteStatus", 0);
        cmd.Parameters.AddWithValue("@Mastercompanyid", Session["VarCompanyNo"]);
        cmd.Parameters.AddWithValue("@UserId", Session["VarUserId"]);
        cmd.Parameters.AddWithValue("@Type", 2);
        cmd.Parameters.AddWithValue("@ParameterValue", str);      

        DataSet ds = new DataSet();
        SqlDataAdapter ad = new SqlDataAdapter(cmd);
        cmd.ExecuteNonQuery();
        ad.Fill(ds);
        //*************

        con.Close();
        con.Dispose();

        UtilityModule.ConditionalComboFillWithDS(ref dquality, ds, 0, true, "--Plz Select--");
    }
    private void BindRawMaterialShadeColor()
    {
        string str = "";
        str = str + " 0|"+dditemname.SelectedValue+"|"+dquality.SelectedValue+"|0|0|0|0|0~";
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        if (con.State == ConnectionState.Closed)
        {
            con.Open();
        }

        SqlCommand cmd = new SqlCommand("PRO_BindRawMaterialItemParameterDropDown", con);
        cmd.CommandType = CommandType.StoredProcedure;
        cmd.CommandTimeout = 3000;

        cmd.Parameters.AddWithValue("@CompanyId", ddCompName.SelectedValue);
        cmd.Parameters.AddWithValue("@EMPID", ddempname.SelectedValue);
        cmd.Parameters.AddWithValue("@ProcessId", ddProcessName.SelectedValue);
        cmd.Parameters.AddWithValue("@CarpetQualityId", DDCarpetQuality.SelectedValue);
        cmd.Parameters.AddWithValue("@ChkForCompleteStatus", 0);
        cmd.Parameters.AddWithValue("@Mastercompanyid", Session["VarCompanyNo"]);
        cmd.Parameters.AddWithValue("@UserId", Session["VarUserId"]);
        cmd.Parameters.AddWithValue("@Type", 7);
        cmd.Parameters.AddWithValue("@ParameterValue", str);

        DataSet ds = new DataSet();
        SqlDataAdapter ad = new SqlDataAdapter(cmd);
        cmd.ExecuteNonQuery();
        ad.Fill(ds);
        //*************

        con.Close();
        con.Dispose();

        UtilityModule.ConditionalComboFillWithDS(ref ddlshade, ds, 0, true, "--Plz Select--");
    }
    protected void dditemname_SelectedIndexChanged(object sender, EventArgs e)
    {
        ItemName_SelectChange();
    }
    private void ItemName_SelectChange()
    {
        if (dditemname.SelectedIndex >= 0)
        {
            BindRawMaterialQuality();
            string Qry = "";
            Qry = @" SELECT u.UnitId,u.UnitName  FROM ITEM_MASTER i INNER JOIN  Unit u ON i.UnitTypeID = u.UnitTypeID where item_id=" + dditemname.SelectedValue + " And i.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];

            DataSet DSQ = SqlHelper.ExecuteDataset(Qry);
            UtilityModule.ConditionalComboFillWithDS(ref ddlunit, DSQ, 0, true, "Select Unit");
            //UtilityModule.ConditionalComboFillWithDS(ref dquality, DSQ, 1, true, "Select Quallity");
            if (dquality.Items.Count > 0)
            {
                if (dquality.Items.Count == 1)
                {
                    dquality.SelectedIndex = 0;
                }
                else
                {
                    dquality.SelectedIndex = 1;
                }

                QualitySelectedIndexChange();

            }
            if (ddlunit.Items.Count > 0)
            {
                ddlunit.SelectedIndex = 1;
            }
        }
    }
    protected void dquality_SelectedIndexChanged(object sender, EventArgs e)
    {
        QualitySelectedIndexChange();
    }
    private void QualitySelectedIndexChange()
    {
        BindRawMaterialShadeColor();
        fill_qty();
    }
    protected void dddesign_SelectedIndexChanged(object sender, EventArgs e)
    {
        fill_qty();
    }
    protected void ddcolor_SelectedIndexChanged(object sender, EventArgs e)
    {
        fill_qty();
    }
    protected void ddshape_SelectedIndexChanged(object sender, EventArgs e)
    {
        fill_qty();
    }
    protected void ddsize_SelectedIndexChanged(object sender, EventArgs e)
    {
        fill_qty();
    }
    protected void ddlshade_SelectedIndexChanged(object sender, EventArgs e)
    {
        TempLotNo = "";
        TempSelectedGodownId = "0";
        fill_qty(sender);
    }
    //protected void ddgodown_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    //if (TDBinNo.Visible == true)
    //    //{
    //    //    FillBinNo(sender);
    //    //}
    //    //else
    //    //{
    //    //    Fill_GodownSelectedChange(sender);
    //    //    Fill_LotNoSelectedChange();
    //    //}
    //    Fill_GodownSelectedChange(sender);
    //    //Fill_LotNoSelectedChange();
    //}
    //protected void FillBinNo(object sender = null)
    //{
    //    txtstock.Text = "";
    //    int color = 0;
    //    int quality = 0;
    //    int design = 0;
    //    int shape = 0;
    //    int size = 0;
    //    int shadeColor = 0;
    //    if ((ql.Visible == true && dquality.SelectedIndex > 0) || ql.Visible != true)
    //    {
    //        quality = 1;
    //    }
    //    if (dsn.Visible == true && dddesign.SelectedIndex > 0 || dsn.Visible != true)
    //    {
    //        design = 1;
    //    }
    //    if (clr.Visible == true && ddcolor.SelectedIndex > 0 || clr.Visible != true)
    //    {
    //        color = 1;
    //    }
    //    if (shp.Visible == true && ddshape.SelectedIndex > 0 || shp.Visible != true)
    //    {
    //        shape = 1;
    //    }
    //    if (sz.Visible == true && ddsize.SelectedIndex > 0 || sz.Visible != true)
    //    {
    //        size = 1;
    //    }
    //    if (shd.Visible == true && ddlshade.SelectedIndex > 0 || shd.Visible != true)
    //    {
    //        shadeColor = 1;
    //    }
    //    if (quality == 1 && design == 1 && color == 1 && shape == 1 && size == 1 && shadeColor == 1)
    //    {
    //        int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "", Convert.ToInt32(Session["varMasterCompanyIDForERP"]));
    //        string str = "Select Distinct BinNo,BinNo from stock Where CompanyId=" + ddCompName.SelectedValue + " And Godownid=" + ddgodown.SelectedValue + "   and item_finished_id=" + Varfinishedid + " and LotNo='" + ddlotno.SelectedItem.Text + "'";
    //        if (MySession.Stockapply == "True" && ChKForEdit.Checked == false)
    //        {
    //            str = str + "  And QtyInHand>0";
    //        }
    //        if (TDTagno.Visible == true)
    //        {
    //            str = str + "  And TagNo='" + DDTagno.SelectedItem.Text + "'";
    //        }
    //        UtilityModule.ConditionalComboFill(ref DDBinNo, str, true, "--Select--");
    //        if (DDBinNo.Items.Count > 0)
    //        {
    //            DDBinNo.SelectedIndex = 1;
    //            if (sender != null)
    //            {
    //                DDBinNo_SelectedIndexChanged(sender, new EventArgs());
    //            }
    //        }
    //    }
    //}
    //protected void FillTagNo(object sender = null)
    //{
    //    txtstock.Text = "";
    //    int color = 0;
    //    int quality = 0;
    //    int design = 0;
    //    int shape = 0;
    //    int size = 0;
    //    int shadeColor = 0;
    //    if ((ql.Visible == true && dquality.SelectedIndex > 0) || ql.Visible != true)
    //    {
    //        quality = 1;
    //    }
    //    if (dsn.Visible == true && dddesign.SelectedIndex > 0 || dsn.Visible != true)
    //    {
    //        design = 1;
    //    }
    //    if (clr.Visible == true && ddcolor.SelectedIndex > 0 || clr.Visible != true)
    //    {
    //        color = 1;
    //    }
    //    if (shp.Visible == true && ddshape.SelectedIndex > 0 || shp.Visible != true)
    //    {
    //        shape = 1;
    //    }
    //    if (sz.Visible == true && ddsize.SelectedIndex > 0 || sz.Visible != true)
    //    {
    //        size = 1;
    //    }
    //    if (shd.Visible == true && ddlshade.SelectedIndex > 0 || shd.Visible != true)
    //    {
    //        shadeColor = 1;
    //    }
    //    if (quality == 1 && design == 1 && color == 1 && shape == 1 && size == 1 && shadeColor == 1)
    //    {
    //        int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "", Convert.ToInt32(Session["varMasterCompanyIDForERP"]));
    //        string str = "Select Distinct TagNo,Tagno from stock Where CompanyId=" + ddCompName.SelectedValue + " And Godownid=" + ddgodown.SelectedValue + "   and item_finished_id=" + Varfinishedid + " and LotNo='" + ddlotno.SelectedItem.Text + "'";
    //        if (MySession.Stockapply == "True" && ChKForEdit.Checked == false)
    //        {
    //            str = str + " and Round(Qtyinhand,3)>0";
    //        }

    //        UtilityModule.ConditionalComboFill(ref DDTagno, str, true, "--Select--");
    //        if (DDTagno.Items.Count > 0)
    //        {

    //            DDTagno.SelectedIndex = 1;
    //            if (sender != null)
    //            {
    //                DDTagno_SelectedIndexChanged(sender, new EventArgs());
    //            }
    //        }
    //    }
    //}
    //private void Fill_GodownSelectedChange(object sender = null)
    //{
    //    txtstock.Text = "";
    //    int color = 0;
    //    int quality = 0;
    //    int design = 0;
    //    int shape = 0;
    //    int size = 0;
    //    int shadeColor = 0;
    //    if ((ql.Visible == true && dquality.SelectedIndex > 0) || ql.Visible != true)
    //    {
    //        quality = 1;
    //    }
    //    if (dsn.Visible == true && dddesign.SelectedIndex > 0 || dsn.Visible != true)
    //    {
    //        design = 1;
    //    }
    //    if (clr.Visible == true && ddcolor.SelectedIndex > 0 || clr.Visible != true)
    //    {
    //        color = 1;
    //    }
    //    if (shp.Visible == true && ddshape.SelectedIndex > 0 || shp.Visible != true)
    //    {
    //        shape = 1;
    //    }
    //    if (sz.Visible == true && ddsize.SelectedIndex > 0 || sz.Visible != true)
    //    {
    //        size = 1;
    //    }
    //    if (shd.Visible == true && ddlshade.SelectedIndex > 0 || shd.Visible != true)
    //    {
    //        shadeColor = 1;
    //    }
    //    if (quality == 1 && design == 1 && color == 1 && shape == 1 && size == 1 && shadeColor == 1)
    //    {
    //        int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "", Convert.ToInt32(Session["varMasterCompanyIDForERP"]));
    //        string str = "Select Distinct lotno,lotno from stock Where CompanyId=" + ddCompName.SelectedValue + " And Godownid=" + ddgodown.SelectedValue + " and item_finished_id=" + Varfinishedid;
    //        if (MySession.Stockapply == "True" && ChKForEdit.Checked == false)
    //        {
    //            str = str + " and Round(QtyInHand,3)>0";
    //        }

    //        UtilityModule.ConditionalComboFill(ref ddlotno, str, true, "--Select--");
    //        ddlotno.SelectedIndex = -1;
    //        if (ddlotno.Items.Count > 0)
    //        {
    //            if (Session["VarCompanyNo"].ToString() == "43")
    //            {
    //                if (TempLotNo != "")
    //                {
    //                    ddlotno.SelectedValue = TempLotNo;
    //                }
    //                else
    //                {
    //                    ddlotno.SelectedIndex = 1;
    //                }
    //            }
    //            else
    //            {
    //                ddlotno.SelectedIndex = 1;
    //            }              
                                  

    //            if (sender != null && ddlotno.SelectedIndex > 0)
    //            {
    //                ddlotno_SelectedIndexChanged(sender, new EventArgs());
    //            }
    //        }

    //    }
    //}
    //protected void ddlotno_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    if (TDTagno.Visible == true)
    //    {
    //        DDTagno.SelectedIndex = -1;
    //        FillTagNo(sender);
    //    }
    //    else
    //    {
    //        Fill_LotNoSelectedChange();
    //    }
    //}
    //private void Fill_LotNoSelectedChange()
    //{
    //    if (ddlotno.Items.Count > 0)
    //    {
    //        txtstock.Text = "0";
    //        int color = 0;
    //        int quality = 0;
    //        int design = 0;
    //        int shape = 0;
    //        int size = 0;
    //        int shadeColor = 0;
    //        if ((ql.Visible == true && dquality.SelectedIndex > 0) || ql.Visible != true)
    //        {
    //            quality = 1;
    //        }
    //        if (dsn.Visible == true && dddesign.SelectedIndex > 0 || dsn.Visible != true)
    //        {
    //            design = 1;
    //        }
    //        if (clr.Visible == true && ddcolor.SelectedIndex > 0 || clr.Visible != true)
    //        {
    //            color = 1;
    //        }
    //        if (shp.Visible == true && ddshape.SelectedIndex > 0 || shp.Visible != true)
    //        {
    //            shape = 1;
    //        }
    //        if (sz.Visible == true && ddsize.SelectedIndex > 0 || sz.Visible != true)
    //        {
    //            size = 1;
    //        }
    //        if (shd.Visible == true && ddlshade.SelectedIndex > 0 || shd.Visible != true)
    //        {
    //            shadeColor = 1;
    //        }
    //        if (quality == 1 && design == 1 && color == 1 && shape == 1 && size == 1 && shadeColor == 1)
    //        {

    //            int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "", Convert.ToInt32(Session["varMasterCompanyIDForERP"]));
    //            ViewState["FinishedID"] = Varfinishedid;
    //            string TagNo = "Without Tag No";
    //            string BinNo = "";
    //            if (TDTagno.Visible == true)
    //            {
    //                TagNo = DDTagno.SelectedIndex > 0 ? DDTagno.SelectedItem.Text : "Without Tag No";
    //            }
    //            if (TDBinNo.Visible == true)
    //            {
    //                BinNo = DDBinNo.SelectedIndex > 0 ? DDBinNo.SelectedItem.Text : "";
    //            }
    //            txtstock.Text = UtilityModule.getstockQty(ddCompName.SelectedValue, ddgodown.SelectedValue, ddlotno.SelectedItem.Text, Varfinishedid, TagNo: TagNo, BinNo: BinNo).ToString();

    //        }
    //    }
    //}
    private string CheckStockQty()
    {
        string str = "";
        try
        {
//            //int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "");
//            SqlParameter[] parparam = new SqlParameter[4];

//            int OrderID = Convert.ToInt32(SqlHelper.ExecuteScalar(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "Select Orderid From PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + " Where IssueOrderId=" + ddOrderNo.SelectedValue));
//            parparam[0] = new SqlParameter("@OrderId", OrderID);
//            parparam[1] = new SqlParameter("@ProcessNo", ddProcessName.SelectedValue);
//            parparam[2] = new SqlParameter("@FinishedID", ViewState["FinishedID"]);
//            parparam[3] = new SqlParameter("@TxtQty", txtissue.Text);
//            parparam[4] = new SqlParameter("@Message", SqlDbType.NVarChar, 2);
//            parparam[4].Direction = ParameterDirection.Output;
//            parparam[5] = new SqlParameter("@PrtIdFlag", ddProcessName.SelectedValue);

//            string Str = @"Select Select ISNULL(Sum(IssueQuantity),0) From ProcessRawMaster PRM,ProcessRawTran PRT Where PRM.PRMid=PRT.PRMid And PRM.trantype=0 And PRM.TypeFlag = 0 And 
//            PRM.Processid=" + ddProcessName.SelectedValue + " And PRM.Prorderid in (Select IssueOrderid From PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + @" 
//            Where OrderId in (Select Orderid From PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + " Where IssueOrderId=" + ddOrderNo.SelectedValue + ")) And PRTid=0 And PRM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];

//            SqlHelper.ExecuteNonQuery(ErpGlobal.DBCONNECTIONSTRING, CommandType.StoredProcedure, "Pro_CheckStockQtyForProcessIssue", parparam);
//            if (parparam[4].Value.ToString() == "G")
//            {
//                LblError.Visible = true;
//                LblError.Text = "IssueQty should not be greater than stock";
//                str = "G";
//            }
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Masters/RawMaterial/IndentRawIssue");
        }
        return str;
    }
    protected void DuplicateChallanNo()
    {
        LblError.Text = "";
        LblError.Visible = true;
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        if (con.State == ConnectionState.Closed)
        {
            con.Open();
        }
        try
        {
            if (txtchalanno.Text != "")
            {
                string str = "Select ChalanNo From ProcessRawMaster Where ChalanNo<>'' And TranType=0 And TypeFlag = 0 And ChalanNo='" + txtchalanno.Text + "' and Empid>0 And PRMID<>" + ViewState["Prmid"] + " And MasterCompanyId=" + Session["varMasterCompanyIDForERP"];
                DataSet ds = SqlHelper.ExecuteDataset(con, CommandType.Text, str);
                if (ds.Tables[0].Rows.Count > 0)
                {
                    LblError.Text = "Challan no. already exists.....";
                }
            }
        }
        catch (Exception ex)
        {
            LblError.Visible = true;
            LblError.Text = ex.Message;
        }
        finally
        {
            con.Close();
            con.Dispose();
        }
    }
    protected void btnsave_Click(object sender, EventArgs e)
    {
        CHECKVALIDCONTROL();
        if (LblError.Text == "")
        {
            //if (variable.VarMANYFOLIORAWISSUE_SINGLECHALAN == "0")
            //{
            //    DuplicateChallanNo();
            //}
        }
       

        //string FolioDetailData = "";

        //for (int i = 0; i < GVPendingMaterialDetail.Rows.Count; i++)
        //{
        //    //CheckBox Chkboxitem = ((CheckBox)GVPendingMaterialDetail.Rows[i].FindControl("Chkboxitem"));

        //    //if (Chkboxitem.Checked == true)
        //    //{
        //        Label lblIssueOrderId = ((Label)GVPendingMaterialDetail.Rows[i].FindControl("lblIssueOrderId"));
        //        Label lblIssueChallanNo = ((Label)GVPendingMaterialDetail.Rows[i].FindControl("lblIssueChallanNo"));
        //        Label lblConsmpQty = ((Label)GVPendingMaterialDetail.Rows[i].FindControl("lblConsmpQty"));
        //        Label lblIssQty = ((Label)GVPendingMaterialDetail.Rows[i].FindControl("lblIssQty"));
        //        Label lblPendQty = ((Label)GVPendingMaterialDetail.Rows[i].FindControl("lblPendQty"));

        //        if (FolioDetailData == "")
        //        {
        //            FolioDetailData = lblIssueOrderId.Text + "|" + lblIssueChallanNo.Text + "|" + lblConsmpQty.Text + "|" + lblIssQty.Text + "|" + lblPendQty.Text + "~";
        //        }
        //        else
        //        {
        //            FolioDetailData = FolioDetailData + lblIssueOrderId.Text + "|" + lblIssueChallanNo.Text + "|" + lblConsmpQty.Text + "|" + lblIssQty.Text + "|" + lblPendQty.Text + "~";
        //        }
        //    //}
        //}
        //if (FolioDetailData == "")
        //{
        //    ScriptManager.RegisterStartupScript(Page, GetType(), "save1", "alert('Please select atleast one check box');", true);
        //    return;
        //}

        //if (LblError.Text == "")
        //{
        //    SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        //    con.Open();
        //    SqlTransaction Tran = con.BeginTransaction();
        //    try
        //    {
        //        SqlParameter[] arr = new SqlParameter[38];

        //        arr[0] = new SqlParameter("@PrmID", SqlDbType.Int);
        //        arr[1] = new SqlParameter("@CompanyId", SqlDbType.Int);
        //        arr[2] = new SqlParameter("@EmpId", SqlDbType.Int);
        //        arr[3] = new SqlParameter("@ProcessId", SqlDbType.Int);
        //        arr[4] = new SqlParameter("@FolioDetailData", SqlDbType.NVarChar);
        //        arr[5] = new SqlParameter("@IssueDate", SqlDbType.SmallDateTime);
        //        arr[6] = new SqlParameter("@ChalanNo", SqlDbType.NVarChar, 50);
        //        arr[7] = new SqlParameter("@TranType", SqlDbType.Int);
        //        arr[8] = new SqlParameter("@userid", SqlDbType.Int);
        //        arr[9] = new SqlParameter("@mastercompanyid", SqlDbType.Int);
        //        arr[10] = new SqlParameter("@Prtid", SqlDbType.Int);
        //        arr[11] = new SqlParameter("@CategoryId", SqlDbType.Int);
        //        arr[12] = new SqlParameter("@Itemid", SqlDbType.Int);
        //        arr[13] = new SqlParameter("@FinishedId", SqlDbType.Int);
        //        arr[14] = new SqlParameter("@GodownId", SqlDbType.Int);
        //        arr[15] = new SqlParameter("@IssueQuantity", SqlDbType.Float);
        //        arr[16] = new SqlParameter("@lotNo", SqlDbType.NVarChar, 50);
        //        arr[17] = new SqlParameter("@UnitId", SqlDbType.Int);
        //        arr[18] = new SqlParameter("@PrmIdOutPut", SqlDbType.Int);
        //        arr[19] = new SqlParameter("@PrtIdOutPut", SqlDbType.Int);
        //        arr[20] = new SqlParameter("@UpdateFlag", SqlDbType.Int);
        //        arr[21] = new SqlParameter("@BinNo", SqlDbType.VarChar, 50);
        //        arr[22] = new SqlParameter("@TagNo", SqlDbType.VarChar, 50);
        //        arr[23] = new SqlParameter("@Msg", SqlDbType.VarChar, 100);
        //        arr[24] = new SqlParameter("@TanaBana", SqlDbType.VarChar, 50);
        //        arr[25] = new SqlParameter("@TransportName", SqlDbType.VarChar, 50);
        //        arr[26] = new SqlParameter("@BiltyNo", SqlDbType.VarChar, 50);
        //        arr[27] = new SqlParameter("@VehicleNo", SqlDbType.VarChar, 20);
        //        arr[28] = new SqlParameter("@EstimatedRate", SqlDbType.Float);
        //        arr[29] = new SqlParameter("@Conetype", SqlDbType.VarChar, 50);
        //        arr[30] = new SqlParameter("@Noofcone", SqlDbType.Int);
        //        arr[31] = new SqlParameter("@Remark", txtremark.Text);
        //        arr[32] = new SqlParameter("@FolioChallanNo", SqlDbType.VarChar, 50);
        //        arr[33] = new SqlParameter("@BellWt", SqlDbType.Float);
        //        arr[34] = new SqlParameter("@CGSTSGST", SqlDbType.Float);
        //        arr[35] = new SqlParameter("@ItemDesignID", SqlDbType.Int);
        //        arr[36] = new SqlParameter("@BranchID", SqlDbType.Int);
        //        arr[37] = new SqlParameter("@EWayBillNo", SqlDbType.VarChar, 50);

        //        int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, Tran, ddlshade, "", Convert.ToInt32(Session["varMasterCompanyIDForERP"]));
                
        //        arr[0].Value = ViewState["Prmid"];
        //        arr[1].Value = ddCompName.SelectedValue;
        //        arr[2].Value = ddempname.SelectedValue;
        //        arr[3].Value = ddProcessName.SelectedValue;
        //        arr[4].Value = FolioDetailData;
        //        arr[5].Value = txtdate.Text;
        //        arr[6].Value = txtchalanno.Text;
        //        arr[6].Direction = ParameterDirection.InputOutput;
        //        arr[7].Value = 0;
        //        arr[8].Value = Session["varuserid"].ToString();
        //        arr[9].Value = Session["varMasterCompanyIDForERP"].ToString();
        //        arr[10].Value = 0;
        //        arr[20].Value = 0;
        //        //if (btnsave.Text == "Update")
        //        //{
        //        //    arr[10].Value = gvdetail.SelectedDataKey.Value;
        //        //    arr[20].Value = 1;
        //        //}
        //        arr[11].Value = ddCatagory.SelectedValue;
        //        arr[12].Value = dditemname.SelectedValue;
        //        arr[13].Value = Varfinishedid;
        //        arr[14].Value = ddgodown.SelectedValue;
        //        arr[15].Value = txtissue.Text;
        //        arr[16].Value = ddlotno.SelectedItem.Text;
        //        arr[17].Value = ddlunit.SelectedValue;
        //        arr[18].Direction = ParameterDirection.Output;
        //        arr[19].Direction = ParameterDirection.Output;
        //        string BinNo = TDBinNo.Visible == false ? "" : (DDBinNo.SelectedIndex > 0 ? DDBinNo.SelectedItem.Text : "");
        //        arr[21].Value = BinNo;
        //        arr[22].Value = TDTagno.Visible == false ? "Without Tag No" : DDTagno.SelectedItem.Text;
        //        arr[23].Direction = ParameterDirection.Output;
        //        arr[24].Value = txtTanaBana.Text;
        //        arr[25].Value = txtTransportName.Text;
        //        arr[26].Value = txtBiltyNo.Text;
        //        arr[27].Value = txtVehicleNo.Text;
        //        arr[28].Value = txtEstimatedRate.Text == "" ? "0" : txtEstimatedRate.Text;
        //        arr[29].Value = DDconetype.SelectedItem.Text;
        //        arr[30].Value = txtnoofcone.Text == "" ? "0" : txtnoofcone.Text;
        //        arr[32].Value = "";
        //        arr[33].Value = TxtBellWt.Text == "" ? "0" : TxtBellWt.Text;
        //        arr[34].Value = txtCGSTSGST.Text == "" ? "0" : txtCGSTSGST.Text;

        //        TempLotNo = ddlotno.SelectedValue;
        //        TempSelectedGodownId =  ddgodown.SelectedValue;

        //        //if (TdDDItemDesignName.Visible == true)
        //        //{
        //        //    arr[35].Value = DDItemDesignName.SelectedValue;
        //        //}
        //        //else
        //        //{
        //            arr[35].Value = 0;
        //        //}
        //        arr[36].Value = DDBranchName.SelectedValue;
        //        arr[37].Value = TDEWayBillNo.Visible == true ? txtEWayBillNo.Text : "";

        //        SqlHelper.ExecuteNonQuery(Tran, CommandType.StoredProcedure, "PRO_PROCESS_RAW_ISSUE_WITHMULTIPLEFOLIO", arr);

        //        Tran.Commit();
        //        txtchalanno.Text = arr[6].Value.ToString();
        //        ViewState["Prmid"] = arr[18].Value;
        //        LblError.Visible = true;
        //        LblError.Text = arr[23].Value.ToString();
        //        Fill_Grid();
        //        //fill_Grid_ShowConsmption();
        //        SaveReferece();

        //        if (Session["VarCompanyNo"].ToString() == "43")
        //        {
        //            fill_qty();
        //            Fill_GodownSelectedChange();
        //            Fill_LotNoSelectedChange();
        //        }

        //        btnsave.Text = "Save";
        //    }
        //    catch (Exception ex)
        //    {
        //        Tran.Rollback();
        //        LblError.Visible = true;
        //        LblError.Text = ex.Message;
        //    }
        //    finally
        //    {
        //        con.Close();
        //        con.Dispose();
        //    }
        //}
    }
    private void SaveReferece()
    {
        if (Session["VarCompanyNo"].ToString() != "43")
        {
            if (ddlshade.Items.Count > 0 && shd.Visible == true)
            {
                ddlshade.SelectedIndex = 0;
            }           
            txtissue.Text = "";
           
        }
        txtissue.Text = "";


    }
//    private void Fill_Grid()
//    {
//        gvdetail.DataSource = fill_Data_grid();
//        gvdetail.DataBind();
//    }
//    private DataSet fill_Data_grid()
//    {
//        DataSet ds = null;
//        string strsql = "";
//        try
//        {
//            if (variable.VarMANYFOLIORAWISSUE_SINGLECHALAN == "1")
//            {
//                strsql = @"Select PrtId,CATEGORY_NAME,ITEM_NAME,QualityName+ Space(2)+DesignName+ Space(2)+ColorName+ Space(2)+ShapeName+ Space(2)+SizeFt+ Space(2)+ShadeColorName DESCRIPTION,
//                             IssueQuantity Qty,LotNo,GodownName,Pt.BinNo,PT.TagNo From Processrawmaster Pm,ProcessRawTran PT,V_FinishedItemDetail VF,GodownMaster GM Where pm.prmid=pt.prmid and  PT.Finishedid=VF.Item_Finished_id And 
//                             PT.GodownId=GM.GodownId And PM.chalanno='" + txtchalanno.Text + "' and PM.Trantype=0 And PM.TypeFlag = 0 And VF.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];
//                //if (ChKForEdit.Checked == true && ddOrderNo.SelectedIndex > 0)
//                //{

//                //    strsql = strsql + " and PM.Prorderid=" + ddOrderNo.SelectedValue + "";
//                //}
//            }
//            else
//            {
////                strsql = @"Select PrtId,CATEGORY_NAME,ITEM_NAME,QualityName+ Space(2)+DesignName+ Space(2)+ColorName+ Space(2)+ShapeName+ Space(2)+SizeFt+ Space(2)+ShadeColorName DESCRIPTION,
////                            IssueQuantity Qty,LotNo,GodownName,Pt.BinNo,PT.TagNo 
////                            From ProcessRawTran PT,V_FinishedItemDetail VF,GodownMaster GM 
////                            Where PT.Finishedid=VF.Item_Finished_id And PT.GodownId=GM.GodownId And PT.PrmID=" + ViewState["Prmid"] + @" And 
////                            VF.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];

//                strsql = @"Select isnull(PRM.FolioChallanNo,PRM.Prorderid) as FolioChallanNo, PRT.PrtId,CATEGORY_NAME,ITEM_NAME,QualityName+ Space(2)+DesignName+ Space(2)+ColorName+ Space(2)+ShapeName+ Space(2)+SizeFt+ Space(2)+ShadeColorName DESCRIPTION,
//                            PRT.IssueQuantity Qty,PRT.LotNo,GM.GodownName,PRT.BinNo,PRT.TagNo  
//                           From ProcessRawMaster PRM(NoLock) JOIN ProcessRawTran PRT(NoLock) ON PRM.PRMid=PRT.PRMid
//                           JOIN V_FinishedItemDetail VF(NoLock) ON PRT.Finishedid=VF.Item_Finished_Id
//                           JOIN GodownMaster GM(NoLock) ON PRT.Godownid=GM.GoDownID
//                            Where PRM.ChalanNo='" + txtchalanno.Text + "' and PRM.trantype=0 and VF.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];
                           
//                strsql = strsql + " Order By PrtId";
//            }
//            ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql);
//        }
//        catch (Exception ex)
//        {
//            LblError.Visible = true;
//            LblError.Text = ex.Message;
//            Logs.WriteErrorLog("Masters_RawMaterial_FrmMultipleChallanRawMaterialIssue|fill_Data_grid|" + ex.Message);
//        }
//        return ds;
//    }
    protected void txtchalan_ontextchange(object sender, EventArgs e)
    {
        string ChalanNo = Convert.ToString(SqlHelper.ExecuteScalar(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "select isnull(ChalanNo,0) asd from ProcessRawMaster where TypeFlag = 0 And ChalanNo='" + txtchalanno.Text + "' And MasterCompanyId=" + Session["varMasterCompanyIDForERP"]));
        if (ChalanNo != "")
        {
            txtchalanno.Text = "";
            txtchalanno.Focus();
            LblError.Visible = true;
            LblError.Text = "Challan No already exist";
        }
        else
        {
            LblError.Visible = false;
        }
    }
    //protected void gvdetail_RowDataBound(object sender, GridViewRowEventArgs e)
    //{
    //    if (e.Row.RowType == DataControlRowType.DataRow)
    //    {
    //        e.Row.Attributes["onmouseover"] = "javascript:setMouseOverColor(this);";
    //        e.Row.Attributes["onmouseout"] = "javascript:setMouseOutColor(this);";
    //        e.Row.Attributes["onclick"] = ClientScript.GetPostBackClientHyperlink(this.gvdetail, "Select$" + e.Row.RowIndex);
    //        for (int i = 0; i < gvdetail.Columns.Count; i++)
    //        {
    //            if (variable.VarBINNOWISE == "1")
    //            {
    //                if (gvdetail.Columns[i].HeaderText.ToUpper() == "BIN NO.")
    //                {
    //                    gvdetail.Columns[i].Visible = true;
    //                }
    //            }
    //            else
    //            {
    //                if (gvdetail.Columns[i].HeaderText.ToUpper() == "BIN NO.")
    //                {
    //                    gvdetail.Columns[i].Visible = false;
    //                }
    //            }

    //            if (gvdetail.Columns[i].HeaderText.ToUpper() == "DEL")
    //            {
    //                if (Session["varCompanyNo"].ToString() == "42")
    //                {
    //                    if (Session["usertype"].ToString() == "1")
    //                    {
    //                        gvdetail.Columns[i].Visible = true;
    //                    }
    //                    else
    //                    {
    //                        gvdetail.Columns[i].Visible = false;
    //                    }
    //                }
    //            }
    //        }
    //    }
    //}
    protected void gvdetail_SelectedIndexChanged(object sender, EventArgs e)
    {
//        LblError.Text = "";
//        DataSet ds = null;
//        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
//        try
//        {
//            con.Open();
//            ds = null;
//            string sql = @"SELECT DISTINCT PRM.PRMid,PRM.Companyid,PRM.Processid,PRM.Prorderid,PRM.Empid,PRM.Date,PRM.ChalanNo,PRT.PRTid,PRT.Finishedid,PRT.IssueQuantity+prt.coneweight as Issuequantity,
//                           PRT.Godownid,PRT.Lotno,PRT.UnitId,CATEGORY_ID,ITEM_ID,QualityId,ColorId,designId,ShapeId,SizeId,ShadecolorId,isnull(Prt.BinNo,'') as BinNo,Prt.Tagno,
//                           isnull(PRT.TanaBana,'') as TanaBana,isnull(PRT.EstimatedRate,0) as EstimatedRate,prt.conetype,prt.noofcone,prt.coneweight,isnull(PRT.CGSTSGST,0) as CGSTSGST
//                           FROM ProcessRawMaster PRM,ProcessRawTran PRT,V_FinishedItemDetail IPM
//                           Where PRM.TypeFlag = 0 And PRM.PRMid=PRT.PRMid And PRT.Finishedid=IPM.ITEM_FINISHED_ID And PRT.PRTid=" + gvdetail.SelectedValue + " ANd PRM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];
//            ds = SqlHelper.ExecuteDataset(con, CommandType.Text, sql);

//            ddCatagory.SelectedValue = ds.Tables[0].Rows[0]["CATEGORY_ID"].ToString();
//            Fill_Category_SelectedChange();
//            dditemname.SelectedValue = ds.Tables[0].Rows[0]["ITEM_ID"].ToString();

//            ItemName_SelectChange();
//            dquality.SelectedValue = ds.Tables[0].Rows[0]["QualityId"].ToString();
//            //ItemName_SelectChange();

//            UtilityModule.ConditionalComboFill(ref ddlunit, "SELECT u.UnitId,u.UnitName  FROM ITEM_MASTER i INNER JOIN  Unit u ON i.UnitTypeID = u.UnitTypeID where item_id=" + dditemname.SelectedValue + " And i.MasterCompanyId=" + Session["varMasterCompanyIDForERP"], true, "Select Unit");
//            ddlunit.SelectedValue = ds.Tables[0].Rows[0]["UnitId"].ToString();

//            //            if (ql.Visible == true)
//            //            {
//            //                UtilityModule.ConditionalComboFill(ref dquality, @"SELECT DISTINCT dbo.Quality.QualityId,dbo.Quality.QualityName
//            //                FROM  dbo.ITEM_PARAMETER_MASTER INNER JOIN PROCESS_CONSUMPTION_DETAIL ON dbo.ITEM_PARAMETER_MASTER.ITEM_FINISHED_ID = PROCESS_CONSUMPTION_DETAIL.IFinishedId
//            //                INNER JOIN dbo.Quality ON dbo.ITEM_PARAMETER_MASTER.QUALITY_ID = dbo.Quality.QualityId
//            //                Where PROCESS_CONSUMPTION_DETAIL.issueorderid=" + ddOrderNo.SelectedValue + " and quality.item_id=" + dditemname.SelectedValue + " And ITEM_PARAMETER_MASTER.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + "", true, "Select Quallity");

//            //                dquality.SelectedValue = ds.Tables[0].Rows[0]["QualityId"].ToString();
//            //                QualitySelectedIndexChange();
//            //            }
//            if (dsn.Visible == true)
//            {
//                dddesign.SelectedValue = ds.Tables[0].Rows[0]["designId"].ToString();
//            }
//            if (clr.Visible == true)
//            {
//                ddcolor.SelectedValue = ds.Tables[0].Rows[0]["ColorId"].ToString();
//            }
//            if (shp.Visible == true)
//            {
//                ddshape.SelectedValue = ds.Tables[0].Rows[0]["ShapeId"].ToString();
//            }
//            if (shd.Visible == true)
//            {
//                ddlshade.SelectedValue = ds.Tables[0].Rows[0]["ShadecolorId"].ToString();
//            }
//            if (procode.Visible == true)
//            {
//                TxtProdCode.Text = ds.Tables[0].Rows[0]["productcode"].ToString();
//            }
//            if (sz.Visible == true)
//            {
//                if (ddlunit.SelectedValue == "1")
//                {
//                    UtilityModule.ConditionalComboFill(ref ddsize, "select sizeid,sizemtr from size where Shapeid=" + ddshape.SelectedValue + " And MasterCompanyId=" + Session["varMasterCompanyIDForERP"], true, "select size");
//                }
//                else if (ddlunit.SelectedValue == "2")
//                {
//                    UtilityModule.ConditionalComboFill(ref ddsize, "select sizeid,sizeft from size where Shapeid=" + ddshape.SelectedValue + " And MasterCompanyId=" + Session["varMasterCompanyIDForERP"], true, "select size");
//                }
//                ddsize.SelectedValue = ds.Tables[0].Rows[0]["SizeId"].ToString();
//            }
//            string Str;
//            switch (Session["varMasterCompanyIDForERP"].ToString())
//            {
//                case "9":
//                    Str = @"SELECT ROUND(SUM(CASE WHEN CalType=0 or Caltype=2 Then Case When UnitId=1 Then (PD.Qty-isnull(CancelQty,0))*PD.Area*(PCD.IQTY+PCD.ILoss) Else (PD.Qty-Isnull(CancelQty,0))*PD.Area*(PCD.IQTY+PCD.ILOss)/10.76391 End Else 
//                    Case When UnitId=1 Then (PD.Qty-Isnull(CancelQty,0))*(PCD.IQTY+PCD.ILoss) Else (PD.Qty-isnull(CancelQty,0))*(PCD.IQTY+PCD.ILoss) End End),3) Qty,[dbo].[Get_ProcessIssueQty] (PCD.IFinishedid,PM.IssueOrderId) IssQty 
//                    From PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + " PM,PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + @" PD,
//                    PROCESS_CONSUMPTION_DETAIL PCD Where PM.IssueOrderId=PD.IssueOrderId And PD.Issue_Detail_Id=PCD.Issue_Detail_Id And 
//                    PCD.ProcessId=" + ddProcessName.SelectedValue + " And PCD.IssueOrderID=" + ddOrderNo.SelectedValue + @" And PCD.IFinishedid=" + ds.Tables[0].Rows[0]["Finishedid"] + @"
//                    Group By PM.IssueOrderId,PCD.IFinishedid";
//                    break;
//                case "15":
//                    Str = @"SELECT ROUND(SUM(Case When UnitId=1 Then (PD.Qty-isnull(CancelQty,0))*PD.Area*PCD.IQTY*1.196 Else (PD.Qty-isnull(CancelQty,0))*PD.Area*PCD.IQTY End ),3)  Qty,[dbo].[Get_ProcessIssueQty] (PCD.IFinishedid,PM.IssueOrderId) IssQty 
//                    From PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + " PM,PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + @" PD,
//                    PROCESS_CONSUMPTION_DETAIL PCD Where PM.IssueOrderId=PD.IssueOrderId And PD.Issue_Detail_Id=PCD.Issue_Detail_Id And 
//                    PCD.ProcessId=" + ddProcessName.SelectedValue + " And PCD.IssueOrderID=" + ddOrderNo.SelectedValue + @" And PCD.IFinishedid=" + ds.Tables[0].Rows[0]["Finishedid"] + @"
//                    Group By PM.IssueOrderId,PCD.IFinishedid";
//                    break;
//                case "38":
//                    Str = @"SELECT ROUND(SUM(CASE WHEN PCD.ICalType<>1 Then Case When UnitId=1 Then (PD.Qty-isnull(CancelQty,0))*PD.Area*PCD.IQTY*1.196 Else (PD.Qty-isnull(CancelQty,0))*PD.Area*PCD.IQTY End Else 
//                    Case When UnitId=1 Then (PD.Qty-isnull(CancelQty,0))*PCD.IQTY*1.196 Else (PD.Qty-isnull(CancelQty,0))*PCD.IQTY End End),3) Qty,[dbo].[Get_ProcessIssueQty] (PCD.IFinishedid,PM.IssueOrderId) IssQty 
//                    From PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + " PM,PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + @" PD,
//                    PROCESS_CONSUMPTION_DETAIL PCD Where PM.IssueOrderId=PD.IssueOrderId And PD.Issue_Detail_Id=PCD.Issue_Detail_Id And 
//                    PCD.ProcessId=" + ddProcessName.SelectedValue + " And PCD.IssueOrderID=" + ddOrderNo.SelectedValue + @" And PCD.IFinishedid=" + ds.Tables[0].Rows[0]["Finishedid"] + @"
//                    Group By PM.IssueOrderId,PCD.IFinishedid";
//                    break;
//                default:
//                    Str = @"SELECT ROUND(SUM(CASE WHEN CalType=0 or Caltype=2 Then Case When UnitId=1 Then (PD.Qty-isnull(CancelQty,0))*PD.Area*PCD.IQTY*1.196 Else (PD.Qty-isnull(CancelQty,0))*PD.Area*PCD.IQTY End Else 
//                    Case When UnitId=1 Then (PD.Qty-isnull(CancelQty,0))*PCD.IQTY*1.196 Else (PD.Qty-isnull(CancelQty,0))*PCD.IQTY End End),3) Qty,[dbo].[Get_ProcessIssueQty] (PCD.IFinishedid,PM.IssueOrderId) IssQty 
//                    From PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + " PM,PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + @" PD,
//                    PROCESS_CONSUMPTION_DETAIL PCD Where PM.IssueOrderId=PD.IssueOrderId And PD.Issue_Detail_Id=PCD.Issue_Detail_Id And 
//                    PCD.ProcessId=" + ddProcessName.SelectedValue + " And PCD.IssueOrderID=" + ddOrderNo.SelectedValue + @" And PCD.IFinishedid=" + ds.Tables[0].Rows[0]["Finishedid"] + @"
//                    Group By PM.IssueOrderId,PCD.IFinishedid";
//                    break;
//            }

//            DataSet ds1 = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, Str);
//            if (ds1.Tables[0].Rows.Count > 0)
//            {
//                txtconqty.Text = (ds1.Tables[0].Rows[0]["qty"].ToString());
//                TxtPendQty.Text = (Math.Round(Convert.ToDouble(ds1.Tables[0].Rows[0]["qty"]) - Convert.ToDouble(ds1.Tables[0].Rows[0]["IssQty"]), 3)).ToString();
//            }

//            ////UtilityModule.ConditionalComboFill(ref ddgodown, "Select Distinct GM.GodownID,GM.GodownName From GodownMaster GM,Stock S Where GM.GodownID=S.GodownID And QtyInHand>0 And CompanyId=" + ddCompName.SelectedValue + " And item_finished_id=" + ds.Tables[0].Rows[0]["Finishedid"] + " And GM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + " Order By GodownName", true, "--Select--");

//            string str1 = "";
//            str1 = "Select Distinct GM.GodownID,GM.GodownName From GodownMaster GM JOIN Godown_Authentication GA ON GM.GoDownID=GA.GodownID and GA.UserID=" + Session["varUserId"] + " and GA.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @"
//                    JOIN Stock S ON GM.GodownID=S.GodownID
//                    Where QtyInHand>0 And CompanyId=" + ddCompName.SelectedValue + " And item_finished_id=" + ds.Tables[0].Rows[0]["Finishedid"] + " And GM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @"
//                    Order By GodownName";

//            UtilityModule.ConditionalComboFill(ref ddgodown, str1, true, "--Select--");
//            ddgodown.SelectedValue = ds.Tables[0].Rows[0]["Godownid"].ToString();
//            ddgodown_SelectedIndexChanged(sender, new EventArgs());
//            if (ddlotno.Items.FindByValue(ds.Tables[0].Rows[0]["Lotno"].ToString()) != null)
//            {
//                ddlotno.SelectedValue = ds.Tables[0].Rows[0]["Lotno"].ToString();
//                ddlotno_SelectedIndexChanged(sender, new EventArgs());
//            }
//            if (TDTagno.Visible == true)
//            {
//                if (DDTagno.Items.FindByValue(ds.Tables[0].Rows[0]["Tagno"].ToString()) != null)
//                {
//                    DDTagno.SelectedValue = ds.Tables[0].Rows[0]["Tagno"].ToString();
//                    DDTagno_SelectedIndexChanged(sender, new EventArgs());
//                }
//            }
//            if (TDBinNo.Visible == true)
//            {
//                if (DDBinNo.Items.FindByText(ds.Tables[0].Rows[0]["BinNo"].ToString()) != null)
//                {
//                    DDBinNo.SelectedValue = ds.Tables[0].Rows[0]["BinNo"].ToString();
//                    DDBinNo_SelectedIndexChanged(sender, new EventArgs());
//                }
//            }

//            if (TDTanaBana.Visible == true)
//            {
//                txtTanaBana.Text = ds.Tables[0].Rows[0]["TanaBana"].ToString();
//                txtEstimatedRate.Text = ds.Tables[0].Rows[0]["EstimatedRate"].ToString();
//            }
//            if (DDconetype.Items.FindByText(ds.Tables[0].Rows[0]["Conetype"].ToString()) != null)
//            {
//                DDconetype.SelectedValue = ds.Tables[0].Rows[0]["Conetype"].ToString();
//            }
//            txtnoofcone.Text = ds.Tables[0].Rows[0]["noofcone"].ToString();
//            txtissue.Text = ds.Tables[0].Rows[0]["issuequantity"].ToString();
//            TxtPendQty.Text = (Convert.ToDouble(TxtPendQty.Text) + Convert.ToDouble(txtissue.Text)).ToString();
//            txtstock.Text = (Convert.ToDouble(txtstock.Text) + Convert.ToDouble(txtissue.Text)).ToString();

//            if (TDCGSTSGST.Visible == true)
//            {
//                txtCGSTSGST.Text = ds.Tables[0].Rows[0]["CGSTSGST"].ToString();
//            }
//        }
//        catch (Exception ex)
//        {
//            LblError.Visible = true;
//            LblError.Text = ex.Message;
//        }
//        finally
//        {
//            if (con.State == ConnectionState.Open)
//            {
//                con.Close();
//            }
//        }
//        btnsave.Text = "Update";
    }

    protected void TxtProdCode_TextChanged(object sender, EventArgs e)
    {
        DataSet ds;
        string Str;
        //if (TxtProdCode.Text != "" && ddOrderNo.SelectedIndex > 0)
        if (TxtProdCode.Text != "" && DDCarpetQuality.SelectedIndex > 0)
        {

            //Str = "select IPM.*,IM.CATEGORY_ID  from ITEM_PARAMETER_MASTER IPM,ITEM_MASTER IM,PROCESS_CONSUMPTION_DETAIL PCD  WHERE IPM.ITEM_FINISHED_ID = PCD.IFINISHEDID and PCD.ISSUEORDERID =" + ddOrderNo.SelectedValue + " and IPM.ITEM_ID=IM.ITEM_ID and ProductCode='" + TxtProdCode.Text + "' And IPM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"];
            Str = "";
            ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, Str);
            if (ds.Tables[0].Rows.Count > 0)
            {
                string Qry = @"select category_id,category_name from item_category_master Where MasterCompanyId=" + Session["varMasterCompanyIDForERP"];
                Qry = Qry + " Select Distinct Item_Id,Item_Name from Item_Master where MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + " And Category_Id=" + Convert.ToInt32(ds.Tables[0].Rows[0]["CATEGORY_ID"].ToString());
                Qry = Qry + "  select qualityid,qualityname from quality where MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + " And item_id=" + Convert.ToInt32(ds.Tables[0].Rows[0]["ITEM_ID"].ToString());
                Qry = Qry + "  select distinct Designid,DesignName from Design Where MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + " Order  by DesignName ";
                Qry = Qry + "  SELECT ColorId,ColorName FROM Color Where MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + " order by colorid";
                Qry = Qry + "  select Shapeid,ShapeName from Shape Where MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + " Order by Shapeid  ";
                Qry = Qry + "  SELECT SIZEID,SIZEFT fROM SIZE WhERE MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + " ANd SHAPEID=" + ddshape.SelectedValue + "";
                DataSet DSQ = SqlHelper.ExecuteDataset(Qry);
                UtilityModule.ConditionalComboFillWithDS(ref ddCatagory, DSQ, 0, true, "select");
                ddCatagory.SelectedValue = ds.Tables[0].Rows[0]["CATEGORY_ID"].ToString();
                UtilityModule.ConditionalComboFillWithDS(ref dditemname, DSQ, 1, true, "--Select Item--");
                dditemname.SelectedValue = ds.Tables[0].Rows[0]["ITEM_ID"].ToString();
                UtilityModule.ConditionalComboFillWithDS(ref dquality, DSQ, 2, true, "Select Quallity");
                dquality.SelectedValue = ds.Tables[0].Rows[0]["QUALITY_ID"].ToString();
                UtilityModule.ConditionalComboFillWithDS(ref dddesign, DSQ, 3, true, "--Select Design--");
                dddesign.SelectedValue = ds.Tables[0].Rows[0]["DESIGN_ID"].ToString();
                UtilityModule.ConditionalComboFillWithDS(ref ddcolor, DSQ, 4, true, "--Select Color--");
                ddcolor.SelectedValue = ds.Tables[0].Rows[0]["COLOR_ID"].ToString();
                UtilityModule.ConditionalComboFillWithDS(ref ddshape, DSQ, 5, true, "--Select Shape--");
                ddshape.SelectedValue = ds.Tables[0].Rows[0]["SHAPE_ID"].ToString();
                UtilityModule.ConditionalComboFillWithDS(ref ddsize, DSQ, 6, true, "--SELECT SIZE--");
                ddsize.SelectedValue = ds.Tables[0].Rows[0]["SIZE_ID"].ToString();

                Session["finishedid"] = ds.Tables[0].Rows[0]["Item_Finished_id"].ToString();
                if (Convert.ToInt32(dquality.SelectedValue) > 0)
                {
                    ql.Visible = true;

                }
                else
                {
                    ql.Visible = false;

                }
                if (Convert.ToInt32(dddesign.SelectedValue) > 0)
                {
                    dsn.Visible = true;
                }
                else
                {

                    dsn.Visible = false;
                }
                int c = (ddcolor.SelectedIndex > 0 ? Convert.ToInt32(ddcolor.SelectedValue) : 0);
                if (c > 0)
                {
                    clr.Visible = true;

                }
                else
                {
                    clr.Visible = false;
                }


                int s = (ddshape.SelectedIndex > 0 ? Convert.ToInt32(ddshape.SelectedValue) : 0);
                if (s > 0)
                {
                    shp.Visible = true;
                }

                else
                {
                    shp.Visible = false;
                }

                int si = (ddsize.SelectedIndex > 0 ? Convert.ToInt32(ddsize.SelectedValue) : 0);
                if (si > 0)
                {
                    sz.Visible = true;
                }
                else
                {
                    sz.Visible = false;
                }
                UtilityModule.ConditionalComboFill(ref ddlunit, "SELECT u.UnitId,u.UnitName  FROM ITEM_MASTER i INNER JOIN  Unit u ON i.UnitTypeID = u.UnitTypeID where item_id=" + dditemname.SelectedValue + " And i.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + "", true, "Select Unit");
            }
            else
            {
                TxtProdCode.Text = "";
                TxtProdCode.Focus();
            }
        }
        else
        {
            ddCatagory.Items.Clear();
        }
        fill_qty();
    }
    [System.Web.Services.WebMethodAttribute(), System.Web.Script.Services.ScriptMethodAttribute()]
    public static string[] GetQuality(string prefixText, int count)
    {
        SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
        con.Open();
        string strQuery = "Select ProductCode from ITEM_PARAMETER_MASTER IPM inner join item_Master IM on IM.Item_Id=IPM.Item_Id inner join CategorySeparate CS on CS.CategoryId=IM.Category_Id  where ProductCode Like  '" + prefixText + "%' And IPM.MasterCompanyId=" + MasterCompanyId;
        //string strQuery = "Select ProductCode from ITEM_PARAMETER_MASTER  where ProductCode Like  '" + prefixText + "%'";
        DataSet ds = new DataSet();
        SqlDataAdapter da = new SqlDataAdapter(strQuery, con);
        da.Fill(ds);
        count = ds.Tables[0].Rows.Count;
        con.Close();
        List<string> ProductCode = new List<string>();
        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ProductCode.Add(ds.Tables[0].Rows[i][0].ToString());
        }
        con.Close();
        return ProductCode.ToArray();
    }
    private void Validated()
    {

    }
    protected void btnclose_Click(object sender, EventArgs e)
    {
        Session.Remove("prmid");
        Session.Remove("finishedid");
        Session.Remove("inhand");
        Session.Remove("stocktranid");
        Session.Remove("stockid");
    }
    protected void txtissue_TextChanged(object sender, EventArgs e)
    {
        //double stockqty = Convert.ToDouble(txtstock.Text == "" ? "0" : txtstock.Text);
        //double TotalPendQty = Convert.ToDouble(TxtPendQty.Text == "" ? "0" : TxtPendQty.Text);

        //double Qty = Convert.ToDouble(txtissue.Text == "" ? "0" : txtissue.Text);
        //double coneweight = UtilityModule.Getconeweight(DDconetype.SelectedItem.Text, Convert.ToInt16(txtnoofcone.Text == "" ? "0" : txtnoofcone.Text));
        //Qty = Qty - coneweight;

        //if (Qty > stockqty || Qty > TotalPendQty)
        //{
        //    txtissue.Text = "";
        //    LblError.Text = "Pls Enter Correct Qty ";
        //    LblError.Visible = true;
        //    txtissue.Focus();
        //    return;
        //}
        //else
        //{
        //    LblError.Visible = false;
        //}       

    }
    private string CheckOderStockAssign()
    {
        string str = "";
        try
        {
            //int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "", Convert.ToInt32(Session["varMasterCompanyIDForERP"]));
            //SqlParameter[] parparam = new SqlParameter[7];
            //parparam[0] = new SqlParameter("@PrOrderid", ddOrderNo.SelectedValue);
            //parparam[1] = new SqlParameter("@FinishedID", Varfinishedid);
            //parparam[2] = new SqlParameter("@TxtQty", txtissue.Text);
            //if (btnsave.Text == "Update")
            //{
            //    parparam[3] = new SqlParameter("@PrtId", gvdetail.SelectedDataKey.Value);
            //}
            //else
            //{
            //    parparam[3] = new SqlParameter("@PrtId", 0);
            //}
            //parparam[4] = new SqlParameter("@Message", SqlDbType.NVarChar, 2);
            //parparam[5] = new SqlParameter("@LotNo", ddlotno.SelectedItem.Text);
            //parparam[6] = new SqlParameter("@CompanyId", ddCompName.SelectedValue);
            //parparam[4].Direction = ParameterDirection.Output;

            //SqlHelper.ExecuteNonQuery(ErpGlobal.DBCONNECTIONSTRING, CommandType.StoredProcedure, "[Pro_CheckOrderStockAssign_Weaver]", parparam);
            //str = parparam[4].Value.ToString();
        }
        catch (Exception ex)
        {
            UtilityModule.MessageAlert(ex.Message, "Masters/RawMaterial/IndentRawIssue");
        }
        return str;
    }
    private void fill_qty(object sender = null)
    {
//        txtconqty.Text = "0";
//        TxtPendQty.Text = "0";
//        int color = 0;
//        int quality = 0;
//        int design = 0;
//        int shape = 0;
//        int size = 0;
//        int shadeColor = 0;
//        if ((ql.Visible == true && dquality.SelectedIndex > 0) || ql.Visible != true)
//        {
//            quality = 1;
//        }
//        if (dsn.Visible == true && dddesign.SelectedIndex > 0 || dsn.Visible != true)
//        {
//            design = 1;
//        }
//        if (clr.Visible == true && ddcolor.SelectedIndex > 0 || clr.Visible != true)
//        {
//            color = 1;
//        }
//        if (shp.Visible == true && ddshape.SelectedIndex > 0 || shp.Visible != true)
//        {
//            shape = 1;
//        }
//        if (sz.Visible == true && ddsize.SelectedIndex > 0 || sz.Visible != true)
//        {
//            size = 1;
//        }
//        if (shd.Visible == true && ddlshade.SelectedIndex > 0 || shd.Visible != true)
//        {
//            shadeColor = 1;
//        }
//        //*************************
//        if (quality == 1 && design == 1 && color == 1 && shape == 1 && size == 1 && shadeColor == 1)
//        {
//            ddlotno.Items.Clear();
//            txtstock.Text = "";

//            int Varfinishedid = UtilityModule.getItemFinishedId(dditemname, dquality, dddesign, ddcolor, ddshape, ddsize, TxtProdCode, ddlshade, 0, "", Convert.ToInt32(Session["varMasterCompanyIDForERP"]));
//            DataSet ds = null;
//            string Str;

//            SqlParameter[] param = new SqlParameter[6];
//            param[0] = new SqlParameter("@CompanyId", ddCompName.SelectedValue);
//            param[1] = new SqlParameter("@EmpId", ddempname.SelectedValue);
//            param[2] = new SqlParameter("@CarpetQualityId", DDCarpetQuality.SelectedValue);
//            param[3] = new SqlParameter("@Processid", ddProcessName.SelectedValue);
//            param[4] = new SqlParameter("@Mastercompanyid", Session["varMasterCompanyIDForERP"]);
//            param[5] = new SqlParameter("@Item_finished_id", Varfinishedid);
//            ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.StoredProcedure, "PRO_GETWEAVER_FINISHERCONSUMPTIONQTYByFinishedID", param);

//            if (ds.Tables[0].Rows.Count > 0)
//            {
//                GVPendingMaterialDetail.DataSource = ds.Tables[0];
//                GVPendingMaterialDetail.DataBind();

//                TxtPendQty.Text = ds.Tables[0].Compute("Sum(PendQty)", "").ToString();

//                //txtconqty.Text = (ds.Tables[0].Rows[0]["qty"].ToString());
//                //TxtPendQty.Text = (Math.Round(Convert.ToDouble(ds.Tables[0].Rows[0]["qty"]) - Convert.ToDouble(ds.Tables[0].Rows[0]["IssQty"]), 3)).ToString();
//            }
//            else
//            {
//                GVPendingMaterialDetail.DataSource = "";
//                GVPendingMaterialDetail.DataBind();
//                TxtPendQty.Text = "";
//            }
//            // ////****************************
//            ////string str = @"Select Distinct GM.GodownID,GM.GodownName From GodownMaster GM,Stock S Where GM.GodownID=S.GodownID And QtyInHand>0 And CompanyId=" + ddCompName.SelectedValue + " And item_finished_id=" + Varfinishedid + " And GM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @" Order By GodownName
//            //// select godownid From Modulewisegodown Where ModuleName='" + Page.Title + "'";

//            string str = @"Select Distinct GM.GodownID,GM.GodownName From GodownMaster GM JOIN Godown_Authentication GA ON GM.GodownId=GA.GodownId and GA.UserId=" + Session["varUserId"] + " and GA.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @"
//                            JOIN Stock S ON GM.GodownID=S.GodownID  Where S.QtyInHand>0 And S.CompanyId=" + ddCompName.SelectedValue + " And S.item_finished_id=" + Varfinishedid + " And GM.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @" Order By GM.GodownName
//                           select godownid From Modulewisegodown Where ModuleName='" + Page.Title + "'";

//            ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, str);

//            UtilityModule.ConditionalComboFillWithDS(ref ddgodown, ds, 0, true, "--Select--");

//            if (ddgodown.Items.Count > 0)
//            {
//                if (ds.Tables[1].Rows.Count > 0)
//                {
//                    if (ddgodown.Items.FindByValue(ds.Tables[1].Rows[0]["godownid"].ToString()) != null)
//                    {
//                        ddgodown.SelectedValue = ds.Tables[1].Rows[0]["godownid"].ToString();
//                        if (sender != null)
//                        {
//                            ddgodown_SelectedIndexChanged(sender, new EventArgs());
//                        }

//                    }
//                }
//                else
//                {

//                    if (Session["VarCompanyNo"].ToString() == "43")
//                    {
//                        if (TempSelectedGodownId != "")
//                        {
//                            ddgodown.SelectedValue = TempSelectedGodownId;
//                        }
//                        else
//                        {
//                            ddgodown.SelectedIndex = 1;
//                        }
//                    }
//                    else
//                    {
//                        ddgodown.SelectedIndex = 1;
//                    }
                    
//                    if (sender != null)
//                    {
//                        ddgodown_SelectedIndexChanged(sender, new EventArgs());
//                    }
//                }
//                //Fill_GodownSelectedChange();
//                //Fill_LotNoSelectedChange();
//            }

//        }
    }
    protected void ChkForMtr_CheckedChanged(object sender, EventArgs e)
    {
        if (ChkForMtr.Checked == false)
        {
            UtilityModule.ConditionalComboFill(ref ddsize, "select sizeid,sizeft from size where Shapeid=" + ddshape.SelectedValue + " And MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + "", true, "Size in Ft");
        }
        else
        {
            UtilityModule.ConditionalComboFill(ref ddsize, "select sizeid,sizemtr from size where Shapeid=" + ddshape.SelectedValue + " And MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + "", true, "Size in Mtr");
        }
    }
    private void CHECKVALIDCONTROL()
    {
        LblError.Text = "";
        if (UtilityModule.VALIDDROPDOWNLIST(ddCompName) == false)
        {
            goto a;
        }
        if (UtilityModule.VALIDDROPDOWNLIST(ddProcessName) == false)
        {
            goto a;
        }
        if (UtilityModule.VALIDDROPDOWNLIST(ddempname) == false)
        {
            goto a;
        }
        //if (UtilityModule.VALIDDROPDOWNLIST(ddOrderNo) == false)
        //{
        //    goto a;
        //}
        //if (TdDDItemDesignName.Visible == true)
        //{
        //    if (UtilityModule.VALIDDROPDOWNLIST(DDItemDesignName) == false)
        //    {
        //        goto a;
        //    }
        //}
        if (UtilityModule.VALIDTEXTBOX(txtdate) == false)
        {
            goto a;
        }
        if (UtilityModule.VALIDDROPDOWNLIST(ddCatagory) == false)
        {
            goto a;
        }
        if (UtilityModule.VALIDDROPDOWNLIST(dditemname) == false)
        {
            goto a;
        }
        if (ql.Visible == true)
        {
            if (UtilityModule.VALIDDROPDOWNLIST(dquality) == false)
            {
                goto a;
            }
        }
        if (dsn.Visible == true)
        {
            if (UtilityModule.VALIDDROPDOWNLIST(dddesign) == false)
            {
                goto a;
            }
        }
        if (clr.Visible == true)
        {
            if (UtilityModule.VALIDDROPDOWNLIST(ddcolor) == false)
            {
                goto a;
            }
        }
        if (shp.Visible == true)
        {
            if (UtilityModule.VALIDDROPDOWNLIST(ddshape) == false)
            {
                goto a;
            }
        }
        if (sz.Visible == true)
        {
            if (UtilityModule.VALIDDROPDOWNLIST(ddsize) == false)
            {
                goto a;
            }
        }
        if (shd.Visible == true)
        {
            if (UtilityModule.VALIDDROPDOWNLIST(ddlshade) == false)
            {
                goto a;
            }
        }
        if (UtilityModule.VALIDDROPDOWNLIST(ddlunit) == false)
        {
            goto a;
        }      

        
        if (UtilityModule.VALIDTEXTBOX(txtissue) == false)
        {
            goto a;
        }
        else
        {
            goto B;
        }
    a:
        UtilityModule.SHOWMSG(LblError);
    B: ;
    }
    //private void WayChallanFormatReport()
    //{
    //    SqlParameter[] _array = new SqlParameter[3];
    //    _array[0] = new SqlParameter("@prmId", SqlDbType.Int);
    //    _array[1] = new SqlParameter("@ProcessId", SqlDbType.Int);
    //    _array[2] = new SqlParameter("@Trantype", SqlDbType.Int);

    //    _array[0].Value = ViewState["Prmid"];
    //    _array[1].Value = ddProcessName.SelectedValue;
    //    _array[2].Value = 0; //For Issue

    //    DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.StoredProcedure, "Pro_RawMaterialIssuedDetail_Hafizia", _array);

    //    if (ds.Tables[0].Rows.Count > 0)
    //    {
    //        Session["rptFileName"] = "~\\Reports\\RptRawMaterialIssueWayChallanHafizia.rpt";
    //        Session["GetDataset"] = ds;
    //        Session["dsFileName"] = "~\\ReportSchema\\RptRawMaterialIssueWayChallanHafizia.xsd";

    //        StringBuilder stb = new StringBuilder();
    //        stb.Append("<script>");
    //        stb.Append("window.open('../../ViewReport.aspx', 'nwwin', 'toolbar=0, titlebar=1,  top=0px, left=0px, scrollbars=1, resizable = yes');</script>");
    //        ScriptManager.RegisterClientScriptBlock(Page, GetType(), "opn", stb.ToString(), false);
    //    }
    //    else { ScriptManager.RegisterStartupScript(Page, GetType(), "opn1", "alert('No Record Found!');", true); }
    //}
    //private void WayChallanFormatBackReport()
    //{
    //    SqlParameter[] _array = new SqlParameter[3];
    //    _array[0] = new SqlParameter("@prmId", SqlDbType.Int);
    //    _array[1] = new SqlParameter("@ProcessId", SqlDbType.Int);
    //    _array[2] = new SqlParameter("@Trantype", SqlDbType.Int);

    //    _array[0].Value = ViewState["Prmid"];
    //    _array[1].Value = ddProcessName.SelectedValue;
    //    _array[2].Value = 0; //For Issue

    //    DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.StoredProcedure, "Pro_RawMaterialIssuedWayChallanBackFormat_Hafizia", _array);

    //    if (ds.Tables[1].Rows.Count > 0)
    //    {
    //        Session["rptFileName"] = "~\\Reports\\RptRawMaterialIssueWayChallanBackFormatHafizia.rpt";
    //        Session["GetDataset"] = ds;
    //        Session["dsFileName"] = "~\\ReportSchema\\RptRawMaterialIssueWayChallanBackFormatHafizia.xsd";

    //        StringBuilder stb = new StringBuilder();
    //        stb.Append("<script>");
    //        stb.Append("window.open('../../ViewReport.aspx', 'nwwin', 'toolbar=0, titlebar=1,  top=0px, left=0px, scrollbars=1, resizable = yes');</script>");
    //        ScriptManager.RegisterClientScriptBlock(Page, GetType(), "opn", stb.ToString(), false);
    //    }
    //    else { ScriptManager.RegisterStartupScript(Page, GetType(), "opn1", "alert('No Record Found!');", true); }

    //}
    
    //private void CarpetInternationalFormatReport()
    //{
    //    SqlParameter[] _array = new SqlParameter[3];
    //    _array[0] = new SqlParameter("@ChallanNo", SqlDbType.VarChar,50);
    //    _array[1] = new SqlParameter("@ProcessId", SqlDbType.Int);
    //    _array[2] = new SqlParameter("@Trantype", SqlDbType.Int);

    //    _array[0].Value = txtchalanno.Text;
    //    _array[1].Value = ddProcessName.SelectedValue;
    //    _array[2].Value = 0; //For Issue

    //    DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.StoredProcedure, "Pro_WeaverRawMaterialIssuedMultipleFolioDetail_CarpetInternational", _array);

    //    if (ds.Tables[0].Rows.Count > 0)
    //    {
    //        Session["rptFileName"] = "~\\Reports\\RptRawMaterialIssueOnMultipleFolioDetailCI.rpt";
    //        Session["GetDataset"] = ds;
    //        Session["dsFileName"] = "~\\ReportSchema\\RptRawMaterialIssueOnMultipleFolioDetailCI.xsd";

    //        StringBuilder stb = new StringBuilder();
    //        stb.Append("<script>");
    //        stb.Append("window.open('../../ViewReport.aspx', 'nwwin', 'toolbar=0, titlebar=1,  top=0px, left=0px, scrollbars=1, resizable = yes');</script>");
    //        ScriptManager.RegisterClientScriptBlock(Page, GetType(), "opn", stb.ToString(), false);
    //    }
    //    else 
    //    { 
    //        ScriptManager.RegisterStartupScript(Page, GetType(), "opn1", "alert('No Record Found!');", true); 
    //    }
    //}
    protected void btnpreview_Click(object sender, EventArgs e)
    {
        //CarpetInternationalFormatReport();

    }

    private void fill_Grid_ShowConsmption()
    {
//        DataSet ds = null;
//        string strsql = "";

//        try
//        {
//            switch (Session["varMasterCompanyIDForERP"].ToString())
//            {
//                case "9":
//                    ////                    strsql = @"SELECT  VF1.Category_Name,VF1.Item_Name,VF1.QualityName+Space(2)+VF1.DesignName+Space(2)+VF1.ColorName+Space(2)+VF1.ShapeName+Space(2)+
//                    ////                            CASE WHEN PM.UnitId=1 Then VF1.SizeMtr else VF1.SizeFt END+Space(2)+VF1.ShadeColorName Description,
//                    ////                            Isnull(Round(Sum(CASE WHEN PM.CalType=0 or PM.Caltype=2 THEN CASE WHEN PM.UnitId=1 Then PD.QTY*PD.Area*(OCD.IQTY+OCD.ILoss) * 1.196
//                    ////                            Else CASE WHEN PM.UnitId=6 Then PD.QTY*PD.Area*(OCD.IQTY+OCD.ILoss)* 1.196/10.76391 else PD.QTY*PD.Area*(OCD.IQTY+OCD.ILoss) END END ELSE 
//                    ////                            CASE WHEN PM.UnitId=1 Then PD.QTY*(OCD.IQTY+OCD.ILoss) else PD.QTY*(OCD.IQTY+OCD.ILoss) END END),3),0) ConsmpQTY,
//                    ////                            [dbo].[Get_ProcessIssueQty2] (OCD.IFINISHEDID,PM.Issueorderid," + ddProcessName.SelectedValue + @") IssQty,
//                    ////                            Round(Isnull(Round(Sum(CASE WHEN PM.CalType=0 or PM.Caltype=2 THEN CASE WHEN PM.UnitId=1 Then PD.QTY*PD.Area*(OCD.IQTY+OCD.ILoss)* 1.196
//                    ////                            Else CASE WHEN PM.UnitId=6 Then PD.QTY*PD.Area*(OCD.IQTY+OCD.ILoss)* 1.196/10.76391 else PD.QTY*PD.Area*(OCD.IQTY+OCD.ILoss) END END ELSE CASE WHEN PM.UnitId=1 Then PD.QTY*(OCD.IQTY+OCD.ILoss) else 
//                    ////                            PD.QTY*(OCD.IQTY+OCD.ILoss) END END),3),0)-[dbo].[Get_ProcessIssueQty2] (OCD.IFINISHEDID,PM.Issueorderid," + ddProcessName.SelectedValue + @"),3) PendQty 
//                    ////                            FROM PROCESS_CONSUMPTION_DETAIL OCD,PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + " PM,PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + @" PD,
//                    ////                            V_FinishedItemDetail VF1 Where PM.IssueOrderid=PD.IssueOrderid And OCD.Issueorderid=PD.Issueorderid And OCD.Issue_Detail_Id=PD.Issue_Detail_Id And 
//                    ////                            VF1.ITEM_FINISHED_ID=OCD.IFINISHEDID And PM.Issueorderid=" + ddOrderNo.SelectedValue + " and Ocd.PROCESSID=" + ddProcessName.SelectedValue + " And VF1.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @"
//                    ////                            Group By VF1.Category_Name,VF1.Item_Name,VF1.QualityName,VF1.DesignName,VF1.ColorName,VF1.ShapeName,PM.UnitId,VF1.SizeMtr,VF1.SizeFt,
//                    ////                            VF1.ShadeColorName,OCD.IFINISHEDID,PM.Issueorderid";

//                    strsql = @"SELECT  VF1.Category_Name,VF1.Item_Name,VF1.QualityName+Space(2)+VF1.DesignName+Space(2)+VF1.ColorName+Space(2)+VF1.ShapeName+Space(2)+
//                            CASE WHEN PM.UnitId=1 Then VF1.SizeMtr else VF1.SizeFt END+Space(2)+VF1.ShadeColorName Description,
//                            Isnull(Round(Sum(CASE WHEN PM.CalType=0 or PM.Caltype=2 THEN CASE WHEN PM.UnitId=1 Then (PD.QTY-ISNULL(PD.CANCELQTY,0))*PD.Area*(OCD.IQTY+OCD.ILoss) * 1.196
//                            Else CASE WHEN PM.UnitId=6 Then (PD.QTY-ISNULL(PD.CANCELQTY,0))*PD.Area*(OCD.IQTY+OCD.ILoss)* 1.196/10.76391 else (PD.QTY-ISNULL(PD.CANCELQTY,0))*PD.Area*(OCD.IQTY+OCD.ILoss)* 1.196/10.76391 END END ELSE 
//                            CASE WHEN PM.UnitId=1 Then (PD.QTY-ISNULL(PD.CANCELQTY,0))*(OCD.IQTY+OCD.ILoss) else (PD.QTY-ISNULL(PD.CANCELQTY,0))*(OCD.IQTY+OCD.ILoss) END END),3),0) ConsmpQTY,
//                            [dbo].[Get_ProcessIssueQty2] (OCD.IFINISHEDID,PM.Issueorderid," + ddProcessName.SelectedValue + @") IssQty,
//                            Round(Isnull(Round(Sum(CASE WHEN PM.CalType=0 or PM.Caltype=2 THEN CASE WHEN PM.UnitId=1 Then (PD.QTY-ISNULL(PD.CANCELQTY,0))*PD.Area*(OCD.IQTY+OCD.ILoss)* 1.196
//                            Else CASE WHEN PM.UnitId=6 Then (PD.QTY-ISNULL(PD.CANCELQTY,0))*PD.Area*(OCD.IQTY+OCD.ILoss)* 1.196/10.76391 else (PD.QTY-ISNULL(PD.CANCELQTY,0))*PD.Area*(OCD.IQTY+OCD.ILoss)* 1.196/10.76391 END END ELSE CASE WHEN PM.UnitId=1 Then (PD.QTY-ISNULL(PD.CANCELQTY,0))*(OCD.IQTY+OCD.ILoss) else 
//                            (PD.QTY-ISNULL(PD.CANCELQTY,0))*(OCD.IQTY+OCD.ILoss) END END),3),0)-[dbo].[Get_ProcessIssueQty2] (OCD.IFINISHEDID,PM.Issueorderid," + ddProcessName.SelectedValue + @"),3) PendQty 
//                            FROM PROCESS_CONSUMPTION_DETAIL OCD,PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + " PM,PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + @" PD,
//                            V_FinishedItemDetail VF1 Where PM.IssueOrderid=PD.IssueOrderid And OCD.Issueorderid=PD.Issueorderid And OCD.Issue_Detail_Id=PD.Issue_Detail_Id And 
//                            VF1.ITEM_FINISHED_ID=OCD.IFINISHEDID And PM.Issueorderid=" + ddOrderNo.SelectedValue + " and Ocd.PROCESSID=" + ddProcessName.SelectedValue + " And VF1.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @"
//                            Group By VF1.Category_Name,VF1.Item_Name,VF1.QualityName,VF1.DesignName,VF1.ColorName,VF1.ShapeName,PM.UnitId,VF1.SizeMtr,VF1.SizeFt,
//                            VF1.ShadeColorName,OCD.IFINISHEDID,PM.Issueorderid";
//                    ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql);
//                    break;
//                case "15":
//                    strsql = @"SELECT VF1.Category_Name,VF1.Item_Name,VF1.QualityName+Space(2)+VF1.DesignName+Space(2)+VF1.ColorName+Space(2)+VF1.ShapeName+Space(2)+
//                            CASE WHEN PM.UnitId=1 Then VF1.SizeMtr else VF1.SizeFt END+Space(2)+VF1.ShadeColorName Description,
//                            Isnull(Round(Sum(CASE WHEN PM.UnitId=1 Then PD.Qty*(case when vf.Katiwithexportsize=1 Then vf.Areamtr Else PD.Area End)*OCD.IQTY*1.196 else PD.Qty*(case when vf.Katiwithexportsize=1 Then vf.Actualfullareasqyd Else PD.Area End)*OCD.IQTY END),3),0) ConsmpQTY,
//                            [dbo].[Get_ProcessIssueQty2] (OCD.IFINISHEDID,PM.Issueorderid," + ddProcessName.SelectedValue + ") IssQty,Round(Isnull(Round(Sum(CASE WHEN PM.UnitId=1 Then PD.Qty*(case when vf.Katiwithexportsize=1 Then vf.Areamtr Else PD.Area End)*OCD.IQTY*1.196 else PD.Qty*(case when vf.Katiwithexportsize=1 Then vf.Actualfullareasqyd Else PD.Area End)*OCD.IQTY END),3),0)-[dbo].[Get_ProcessIssueQty2] (OCD.IFINISHEDID,PM.Issueorderid," + ddProcessName.SelectedValue + @"),3) PendQty 
//                            FROM PROCESS_CONSUMPTION_DETAIL OCD,PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + " PM,PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + @" PD,
//                            V_FinishedItemDetail VF1,V_Finisheditemdetail vf Where PM.IssueOrderid=PD.IssueOrderid And OCD.Issueorderid=PD.Issueorderid And OCD.Issue_Detail_Id=PD.Issue_Detail_Id And 
//                            VF1.ITEM_FINISHED_ID=OCD.IFINISHEDID and PD.Item_finished_id=vf.item_finished_id And PM.Issueorderid=" + ddOrderNo.SelectedValue + " and  Ocd.PROCESSID=" + ddProcessName.SelectedValue + " And VF1.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @"
//                            Group By VF1.Category_Name,VF1.Item_Name,VF1.QualityName,VF1.DesignName,VF1.ColorName,VF1.ShapeName,PM.UnitId,VF1.SizeMtr,VF1.SizeFt,
//                            VF1.ShadeColorName,OCD.IFINISHEDID,PM.Issueorderid";
//                    ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql);
//                    break;
//                default:
//                    SqlParameter[] param = new SqlParameter[3];
//                    param[0] = new SqlParameter("@Processid", ddProcessName.SelectedValue);
//                    param[1] = new SqlParameter("@ISSUEORDERID", ddOrderNo.SelectedValue);
//                    param[2] = new SqlParameter("@MASTERCOMPANYID", Session["varMasterCompanyIDForERP"]);
//                    ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.StoredProcedure, "PRO_FILLWEAVER_FINISHERCONSUMPTION", param);
//                    #region
//                    //                    strsql = @"SELECT VF1.Category_Name,VF1.Item_Name,VF1.QualityName+Space(2)+VF1.DesignName+Space(2)+VF1.ColorName+Space(2)+VF1.ShapeName+Space(2)+
//                    //                            CASE WHEN PM.UnitId=1 Then VF1.SizeMtr else VF1.SizeFt END+Space(2)+VF1.ShadeColorName Description,
//                    //                            Isnull(Round(Sum(CASE WHEN PM.CalType=0 or PM.Caltype=2 THEN CASE WHEN PM.UnitId=1 Then PD.Qty*PD.Area*OCD.IQTY*1.196 else PD.Qty*PD.Area*OCD.IQTY END ELSE 
//                    //                            CASE WHEN PM.UnitId=1 Then PD.Qty*OCD.IQTY*1.196 else PD.Qty*OCD.IQTY END END),3),0) ConsmpQTY,
//                    //                            [dbo].[Get_ProcessIssueQty] (OCD.IFINISHEDID,PM.Issueorderid) IssQty,Round(Isnull(Round(Sum(CASE WHEN PM.CalType=0 or PM.Caltype=2 THEN CASE WHEN 
//                    //                            PM.UnitId=1 Then PD.Qty*PD.Area*OCD.IQTY*1.196 else PD.Qty*PD.Area*OCD.IQTY END ELSE CASE WHEN PM.UnitId=1 Then PD.Qty*OCD.IQTY*1.196 else 
//                    //                            PD.Qty*OCD.IQTY END END),3),0)-[dbo].[Get_ProcessIssueQty] (OCD.IFINISHEDID,PM.Issueorderid),3) PendQty 
//                    //                            FROM PROCESS_CONSUMPTION_DETAIL OCD,PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + " PM,PROCESS_ISSUE_DETAIL_" + ddProcessName.SelectedValue + @" PD,
//                    //                            V_FinishedItemDetail VF1,CategorySeparate Cs Where PM.IssueOrderid=PD.IssueOrderid And OCD.Issueorderid=PD.Issueorderid And OCD.Issue_Detail_Id=PD.Issue_Detail_Id And 
//                    //                            VF1.ITEM_FINISHED_ID=OCD.IFINISHEDID And PM.Issueorderid=" + ddOrderNo.SelectedValue + " And VF1.CATEGORY_ID=Cs.CategoryId and Cs.id=1 and Ocd.PROCESSID=" + ddProcessName.SelectedValue + " And VF1.MasterCompanyId=" + Session["varMasterCompanyIDForERP"] + @"
//                    //                            Group By VF1.Category_Name,VF1.Item_Name,VF1.QualityName,VF1.DesignName,VF1.ColorName,VF1.ShapeName,PM.UnitId,VF1.SizeMtr,VF1.SizeFt,
//                    //                            VF1.ShadeColorName,OCD.IFINISHEDID,PM.Issueorderid";
//                    //                    ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, strsql);
//                    #endregion
//                    break;
//            }
//            GDGridShow.DataSource = ds;
//            GDGridShow.DataBind();
//        }
//        catch (Exception ex)
//        {
//            LblError.Visible = true;
//            LblError.Text = ex.Message;
//            Logs.WriteErrorLog("Masters_process_ProcessRawIssue|fill_Data_grid|" + ex.Message);
//        }

    }
    private void Fill_Category_SelectedChange()
    {
        if (ddCatagory.SelectedIndex >= 0)
        {
            ddlcategorycange();
            //***********Sample
            if (hnissampleorder.Value == "1")
            {
                UtilityModule.ConditionalComboFill(ref dditemname, "select ITEM_ID,ITEM_NAME From Item_Master Where CATEGORY_ID=" + ddCatagory.SelectedValue + " and Mastercompanyid=" + Session["varMasterCompanyIDForERP"] + " order by ITEM_NAME", true, "--Select Item--");
            }
            else
            {
//                DataSet ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, @"Select WithoutCottonMaterial 
//                    From PROCESS_ISSUE_MASTER_" + ddProcessName.SelectedValue + @"(Nolock) 
//                    Where IsNull(WithoutCottonMaterial, 0) = 1 And IssueOrderID = " + ddOrderNo.SelectedValue);

//                if (ds.Tables[0].Rows.Count > 0)
//                {
//                    UtilityModule.ConditionalComboFill(ref dditemname, @"SELECT DISTINCT VF.ITEM_ID, VF.ITEM_NAME 
//                    FROM PROCESS_CONSUMPTION_DETAIL PCD(Nolock) 
//                    JOIN V_FinishedItemDetail VF(Nolock) ON VF.ITEM_FINISHED_ID = PCD.IFinishedId And VF.CATEGORY_ID = " + ddCatagory.SelectedValue + @" And 
//                        VF.ITEM_NAME not Like '%Cloth%'
//                    Where PCD.ISSUEORDERID = " + ddOrderNo.SelectedValue + " and PCD.Processid = " + ddProcessName.SelectedValue + @" And 
//                    PCD.MasterCompanyId = " + Session["varMasterCompanyIDForERP"] + "", true, "--Select Item--");
//                }
//                else
//                {
//                    UtilityModule.ConditionalComboFill(ref dditemname, @"SELECT DISTINCT VF.ITEM_ID, VF.ITEM_NAME 
//                    FROM PROCESS_CONSUMPTION_DETAIL PCD(Nolock) 
//                    JOIN V_FinishedItemDetail VF(Nolock) ON VF.ITEM_FINISHED_ID = PCD.IFinishedId And VF.CATEGORY_ID = " + ddCatagory.SelectedValue + @"
//                    Where PCD.ISSUEORDERID = " + ddOrderNo.SelectedValue + " and PCD.Processid = " + ddProcessName.SelectedValue + @" And 
//                    PCD.MasterCompanyId = " + Session["varMasterCompanyIDForERP"] + "", true, "--Select Item--");
//                }
                
            }

            if (dditemname.Items.Count > 0)
            {
                dditemname.SelectedIndex = 1;
                ItemName_SelectChange();
            }
        }
    }
    //protected void gvdetail_RowDeleting(object sender, GridViewDeleteEventArgs e)
    //{
    //    SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
    //    con.Open();
    //    SqlTransaction Tran = con.BeginTransaction();
    //    try
    //    {
    //        int VarPrtID = Convert.ToInt32(gvdetail.DataKeys[e.RowIndex].Value);
    //        ViewState["Prmid"] = SqlHelper.ExecuteScalar(Tran, CommandType.Text, "Select PrmId from ProcessRawTran Where PrtId=" + VarPrtID);
    //        SqlParameter[] arr = new SqlParameter[6];

    //        arr[0] = new SqlParameter("@PrtID", SqlDbType.Int);
    //        arr[1] = new SqlParameter("@RowCount", SqlDbType.Int);
    //        arr[2] = new SqlParameter("@TranType", SqlDbType.Int);
    //        arr[3] = new SqlParameter("@Msg", SqlDbType.VarChar, 100);
    //        arr[4] = new SqlParameter("@userid", Session["varuserid"]);
    //        arr[5] = new SqlParameter("@Mastercompanyid", Session["varMasterCompanyIDForERP"]);

    //        arr[0].Value = VarPrtID;
    //        arr[1].Value = 2;
    //        arr[2].Value = 0;
    //        if (gvdetail.Rows.Count == 1)
    //        {
    //            arr[1].Value = 1;
    //        }
    //        arr[3].Direction = ParameterDirection.Output;

    //        SqlHelper.ExecuteNonQuery(Tran, CommandType.StoredProcedure, "PRO_PROCESS_RAW_ISSUE_RECEIVE_DELETE", arr);
    //        if (arr[3].Value.ToString() != "")
    //        {
    //            ScriptManager.RegisterStartupScript(Page, GetType(), "altdel", "alert('" + arr[3].Value.ToString() + "');", true);
    //        }
    //        else
    //        {
    //            LblError.Text = "Row Item Deleted successfully.";
    //        }
    //        Tran.Commit();
    //    }
    //    catch (Exception ex)
    //    {
    //        Tran.Rollback();
    //        LblError.Visible = true;
    //        LblError.Text = ex.Message;
    //    }
    //    finally
    //    {
    //        con.Close();
    //        con.Dispose();
    //    }
    //    Fill_Grid();
    //}
    private void Fill_Temp_OrderNo()
    {
        SqlHelper.ExecuteNonQuery(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "DELETE TEMP_PROCESS_ISSUE_MASTER_NEW");
        DataSet Ds = SqlHelper.ExecuteDataset(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "Select * from PROCESS_NAME_MASTER");
        if (Ds.Tables[0].Rows.Count > 0)
        {
            for (int i = 0; i < Ds.Tables[0].Rows.Count; i++)
            {
                SqlHelper.ExecuteNonQuery(ErpGlobal.DBCONNECTIONSTRING, CommandType.Text, "Insert into TEMP_PROCESS_ISSUE_MASTER_NEW SELECT PM.Companyid,OM.Customerid,PD.Orderid," + Ds.Tables[0].Rows[i]["Process_Name_Id"] + " ProcessId,PM.Empid,PM.IssueOrderid FROM PROCESS_ISSUE_MASTER_" + Ds.Tables[0].Rows[i]["Process_Name_Id"] + " PM,PROCESS_ISSUE_DETAIL_" + Ds.Tables[0].Rows[i]["Process_Name_Id"] + " PD,OrderMaster OM Where PM.IssueOrderid=PD.IssueOrderid And PD.Orderid=OM.Orderid");
            }
        }
    }
    protected void txtWeaverIdNoscan_TextChanged(object sender, EventArgs e)
    {
       // FillProcess_Employee(sender);
    }
    
   
    //protected void BtnUpdateRemark_Click(object sender, EventArgs e)
    //{
    //    SqlConnection con = new SqlConnection(ErpGlobal.DBCONNECTIONSTRING);
    //    con.Open();
    //    SqlTransaction Tran = con.BeginTransaction();
    //    try
    //    {
    //        SqlParameter[] arr = new SqlParameter[7];

    //        arr[0] = new SqlParameter("@PRMID", SqlDbType.Int);
    //        arr[1] = new SqlParameter("@TranType", SqlDbType.Int);
    //        arr[2] = new SqlParameter("@Msg", SqlDbType.VarChar, 100);
    //        arr[3] = new SqlParameter("@userid", Session["varuserid"]);
    //        arr[4] = new SqlParameter("@Mastercompanyid", Session["varMasterCompanyIDForERP"]);
    //        arr[5] = new SqlParameter("@Remark", txtremark.Text);
    //        arr[6] = new SqlParameter("@ProcessId", ddProcessName.SelectedValue);

    //        arr[0].Value = DDChallanNo.SelectedValue;
    //        arr[1].Value = 0;
    //        arr[2].Direction = ParameterDirection.Output;

    //        SqlHelper.ExecuteNonQuery(Tran, CommandType.StoredProcedure, "PRO_PROCESS_RAW_ISSUE_UPDATE_REMARK", arr);

    //        LblError.Text = arr[3].Value.ToString();
    //        //if (arr[3].Value.ToString() != "")
    //        //{
    //        //    ScriptManager.RegisterStartupScript(Page, GetType(), "altdel", "alert('" + arr[3].Value.ToString() + "');", true);
    //        //}
    //        //else
    //        //{
    //        //    LblError.Text = arr[3].Value.ToString();
    //        //}
    //        Tran.Commit();
    //    }
    //    catch (Exception ex)
    //    {
    //        Tran.Rollback();
    //        LblError.Visible = true;
    //        LblError.Text = ex.Message;
    //    }
    //    finally
    //    {
    //        con.Close();
    //        con.Dispose();
    //    }
    //    Fill_Grid();
    //}
   
    protected void ChkForCompleteStatus_CheckedChanged(object sender, EventArgs e)
    {
        if (ddempname.Items.Count > 0)
        {
            ddempname.SelectedIndex = -1;
            //ddOrderNo.Items.Clear();
        }
    }
    //protected void GVPendingMaterialDetail_RowDataBound(object sender, GridViewRowEventArgs e)
    //{
    //    if (e.Row.RowType == DataControlRowType.DataRow)
    //    {
    //        e.Row.Attributes["onmouseover"] = "javascript:setMouseOverColor(this);";
    //        e.Row.Attributes["onmouseout"] = "javascript:setMouseOutColor(this);";
    //        e.Row.Attributes["onclick"] = ClientScript.GetPostBackClientHyperlink(this.GVPendingMaterialDetail, "Select$" + e.Row.RowIndex);
           
    //    }
    //}
}